Zabbix server and database installation to CentOS 6

1. Add MariaDB 5.5 repository to target server. Add the next entry to /etc/yum.repos.d/MariaDB.repo file:
    # MariaDB 5.5 CentOS repository list - created 2013-10-02 18:40 UTC
    # http://mariadb.org/mariadb/repositories/
    [mariadb]
    name = MariaDB
    baseurl = http://yum.mariadb.org/5.5/centos6-amd64
    gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
    gpgcheck=1

Actual information about correct repository can be founded at https://downloads.mariadb.org/mariadb/repositories/

2. Install MariaDB server/client and other prerequisites:
    yum install MariaDB-server MariaDB-client MariaDB-devel MariaDB-common \
    ldns ldns-devel openssl openssl-devel perl-IO-CaptureOutput perl-Crypt-OpenSSL-RSA \
    perl-WWW-Salesforce perl-DateTime.x86_64 perl-DBD-MySQL.x86_64 perl-File-Pid perl-Expect \
    perl-DateTime-Format-RFC3339

3. Add 'zabbix' user to the system:
    useradd zabbix

4. Add complete set of scripts to /opt/zabbix/:
    mkdir -p /opt/zabbix/
    svn co svn://svn.zabbix.com/branches/2.0.rsm/opt/zabbix/ /opt/zabbix/
    chown -R zabbix:zabbix /opt/zabbix/

5. Edit default MySQL configuration with recommended initial parameters server.cnf from ./config/ folder:
    cp /opt/zabbix/docs/config/mysql_server.cnf /etc/my.cnf.d/server.cnf

Please change innodb_buffer_pool_size to at least 70% of available memory.

6. Checkout SVN repository (there is always actual source code) and go to zbx-2.0 folder:
    mkdir -p zbx-2.0 && svn co svn://svn.zabbix.com/branches/2.0.rsm/ ./zbx-2.0 && cd zbx-2.0

7. Compile Zabbix server, Zabbix agent and Zabbix sender for required platform with the next commands.
You can prepare/compile binaries on test platform or development server and then just place binaries and config files to destination server:
    make distclean
    ./bootstrap.sh
    LDFLAGS="$LDFLAGS -lssl" ./configure --enable-agent --enable-server --with-mysql --enable-ipv6 \
			    --sysconfdir=/opt/zabbix/etc/ \
		            --prefix=/opt/zabbix/ \
		            --datadir=/opt/zabbix/sbin/ \
		            --sbindir=/opt/zabbix/sbin/ \
		            --mandir=/opt/zabbix/usr/share/man/ \
		            --datarootdir=/opt/zabbix/usr/share/
    make dbschema
    make install

8. Change Zabbix server config file with recommended initial parameters zabbix_server.conf from ./config/ folder:
    cp /opt/zabbix/docs/config/zabbix_server.conf /opt/zabbix/etc/zabbix_server.conf

9. Change Zabbix agent config file with recommended initial parameters zabbix_agentd.conf from ./config/ folder:
    cp /opt/zabbix/docs/config/zabbix_agentd.conf /opt/zabbix/etc/zabbix_agentd.conf

To set the hostname automatically, run:
    sed -i -e "s|Hostname=.*|Hostname=`hostname -s`|g" /opt/zabbix/etc/zabbix_agentd.conf

10. Create folders for PID files and log files. Change permissions for these folders to 'zabbix' user:
    mkdir -p /var/run/zabbix/ && mkdir -p /var/log/zabbix/
    chown -R zabbix:zabbix /var/run/zabbix && chown -R zabbix:zabbix /var/log/zabbix

11. Create /var/log/mysql folder and assign permission to 'mysql' user and group:
    mkdir -p /var/log/mysql && chown -R mysql:mysql /var/log/mysql

12. Configure HugeTLB support for MySQL server using official documentation. Add the next parameters to /etc/sysctl.conf:
    # Set the number of pages to be used.
    # Each page is normally 2MB, so a value of 20 = 40MB.
    # This command actually allocates memory, so this much
    # memory must be available.
    vm.hugepages = 20

    # Set the group number that is permitted to access this
    # memory (102 in this case). The mysql user must be a
    # member of this group.
    vm.hugetlb_shm_group = 102

    # Increase the amount of shmem permitted per segment
    # (12G in this case).
    kernel.shmax = 1560281088

    # Increase total amount of shared memory.  The value
    # is the number of pages. At 4KB/page, 4194304 = 16GB.
    Kernel.small = 4194304

Official documentation: http://dev.mysql.com/doc/refman/5.5/en/large-page-support.html
Important notice: Take MySQL server at least 70% - 80% RAM.

13. Start MySQL process. The first startup can be slow. Be patient.
    /etc/init.d/mysql start

14. Create zabbix database:
    DROP DATABASE IF EXISTS zabbix;
    CREATE DATABASE zabbix CHARACTER SET utf8 COLLATE utf8_bin;

15. Discard permissions to access to MySQL from any place:
    UPDATE mysql.user SET Password = Password('<root password>') WHERE User = 'root';
    DELETE FROM mysql.user WHERE Host NOT IN ('localhost', '127.0.0.1', '::1');
    DELETE mysql.user WHERE User NOT LIKE 'root';
    FLUSH PRIVILEGES;

16. Create users for Zabbix frontend and Zabbix server:
    CREATE USER 'zbx_web'@'<each IP of frontend server>' IDENTIFIED BY '<use same password as frontend>';
    GRANT CREATE,DROP,SELECT,UPDATE,DELETE,INSERT ON zabbix.* TO 'zbx_web'@'<each IP of frontend server>';
    CREATE USER 'zbx_srv'@'localhost' IDENTIFIED BY '<use same password as in file /opt/zabbix/etc/zabbix_server.conf>';
    GRANT ALL PRIVILEGES ON zabbix.* TO 'zbx_srv'@'localhost';
    FLUSH PRIVILEGES;

17. Create Zabbix database and fill the database with initial data (database schema and data can be found in repository from 6 step):
    cd <svn_root_folder>/database/mysql/
    cat schema.sql | mysql zabbix
    cat images.sql | mysql zabbix
    cat data.sql | mysql zabbix

You need specify -p argument to mysql command if you have configured permissions to MySQL.

18. Replace some indexes which do not allow creating partitions:
    USE zabbix;
    ALTER TABLE `acknowledges` DROP PRIMARY KEY, ADD KEY `acknowledges_0` (`acknowledgeid`);
    ALTER TABLE `alerts` DROP PRIMARY KEY, ADD KEY `alerts_0` (`alertid`);
    ALTER TABLE `auditlog` DROP PRIMARY KEY, ADD KEY `auditlog_0` (`auditid`);
    ALTER TABLE `events` DROP PRIMARY KEY, ADD KEY `events_0` (`eventid`);
    ALTER TABLE `service_alarms` DROP PRIMARY KEY, ADD KEY `service_alarms_0` (`servicealarmid`);
    ALTER TABLE `history_log` DROP PRIMARY KEY, ADD PRIMARY KEY (`id`,`clock`);
    ALTER TABLE `history_log` DROP KEY `history_log_2`;
    ALTER TABLE `history_log` ADD UNIQUE INDEX `history_log_2`(`itemid`,`id`,`clock`);
    ALTER TABLE `history_text` DROP PRIMARY KEY, ADD PRIMARY KEY (`id`,`clock`);
    ALTER TABLE `history_text` DROP KEY `history_text_2`;
    ALTER TABLE `history_text` ADD UNIQUE INDEX `history_text_2`(`itemid`,`id`,`clock`);

19. Drop foreign keys which do not allow creating partitions:
    USE zabbix;
    ALTER TABLE `acknowledges` DROP FOREIGN KEY `c_acknowledges_1`, DROP FOREIGN KEY `c_acknowledges_2`;
    ALTER TABLE `alerts` DROP FOREIGN KEY `c_alerts_1`, DROP FOREIGN KEY `c_alerts_2`, DROP FOREIGN KEY `c_alerts_3`, DROP FOREIGN KEY `c_alerts_4`;
    ALTER TABLE `auditlog` DROP FOREIGN KEY `c_auditlog_1`;
    ALTER TABLE `service_alarms` DROP FOREIGN KEY `c_service_alarms_1`;
    ALTER TABLE `auditlog_details` DROP FOREIGN KEY `c_auditlog_details_1`;

20. Create initial partitions by a month:
    USE zabbix;
    ALTER TABLE `alerts` PARTITION BY RANGE ( clock) (PARTITION p2010_10 VALUES LESS THAN (UNIX_TIMESTAMP("2010-11-01 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `acknowledges` PARTITION BY RANGE ( clock) (PARTITION p2010_10 VALUES LESS THAN (UNIX_TIMESTAMP("2010-11-01 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `auditlog` PARTITION BY RANGE ( clock) (PARTITION p2010_10 VALUES LESS THAN (UNIX_TIMESTAMP("2010-11-01 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `events` PARTITION BY RANGE ( clock) (PARTITION p2010_10 VALUES LESS THAN (UNIX_TIMESTAMP("2010-11-01 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `service_alarms` PARTITION BY RANGE ( clock) (PARTITION p2010_10 VALUES LESS THAN (UNIX_TIMESTAMP("2010-11-01 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `trends` PARTITION BY RANGE ( clock) (PARTITION p2010_10 VALUES LESS THAN (UNIX_TIMESTAMP("2010-11-01 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `trends_uint` PARTITION BY RANGE ( clock) (PARTITION p2010_10 VALUES LESS THAN (UNIX_TIMESTAMP("2010-11-01 00:00:00") div 1) ENGINE = InnoDB);

21. Create initial partitions by a day:
    USE zabbix;
    ALTER TABLE `history` PARTITION BY RANGE ( clock) (PARTITION p2011_10_23 VALUES LESS THAN (UNIX_TIMESTAMP("2011-10-24 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `history_log` PARTITION BY RANGE ( clock) (PARTITION p2011_10_23 VALUES LESS THAN (UNIX_TIMESTAMP("2011-10-24 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `history_str` PARTITION BY RANGE ( clock) (PARTITION p2011_10_23 VALUES LESS THAN (UNIX_TIMESTAMP("2011-10-24 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `history_text` PARTITION BY RANGE ( clock) (PARTITION p2011_10_23 VALUES LESS THAN (UNIX_TIMESTAMP("2011-10-24 00:00:00") div 1) ENGINE = InnoDB);
    ALTER TABLE `history_uint` PARTITION BY RANGE ( clock) (PARTITION p2011_10_23 VALUES LESS THAN (UNIX_TIMESTAMP("2011-10-24 00:00:00") div 1) ENGINE = InnoDB);

22. Configure "rsm.conf" configuration file under "scripts/" to have the correct user and password information.
Do not forget configure all other parameters in the configuration file to use complete set of scripts.

23. Execute 'MySQL_part_management.pl' script to add actual/current partitions:
    /opt/zabbix/scripts/MySQL_part_management.pl

24. Copy zabbix-server to /etc/init.d/zabbix-server from ./config/:
    cp /opt/zabbix/docs/config/zabbix-server /etc/init.d/zabbix-server && chmod +x /etc/init.d/zabbix-server

25. Copy zabbix-agent to /etc/init.d/zabbix-agent from ./config/:
    cp /opt/zabbix/docs/config/zabbix-agent /etc/init.d/zabbix-agent && chmod +x /etc/init.d/zabbix-agent

26. Add Zabbix server and Zabbix agent to autostart:
    chkconfig --add zabbix-server
    chkconfig --add zabbix-agent
    chkconfig zabbix-server on
    chkconfig zabbix-agent on

27. Start Zabbix server and Zabbix agent:
    service zabbix-agent start
    service zabbix-server start

28. Check log files to confirm successful startup:
    /var/log/zabbix/zabbix_server.log
    /var/log/zabbix/zabbix_agentd.log

29. For automatic creation a next partitions add MySQL_part_management.pl to crontab:
    0 23 * * *	root	perl	/opt/zabbix/scripts/MySQL_part_management.pl 1>2 2>/dev/null
    0 2 * * *	root	perl	/opt/zabbix/scripts/MySQL_part_management.pl 1>2 2>/dev/null

30. Do not forget to add Zabbix server port (10051 TCP) to allow incoming packets from web-interface from required hosts

31. Do not forget to add MySQL port (3306 TCP) to allow communication between web-interface and database from Zabbix web-interface and additional sources.

32. Install rsyslog rules needed for SLV scripts logging:
    cp /opt/zabbix/docs/config/rsyslog.d-rsm.slv.conf /etc/rsyslog.d/rsm.slv.conf
    /etc/init.d/rsyslog restart
