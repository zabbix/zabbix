<?xml version="1.0" encoding="UTF-8"?>
<project name="Zabbix" default="build" basedir=".">
	<property name="dbenable" value="${DBENABLE}"/>
	<property name="dbtype" value="${DBTYPE}"/>
	<property name="dbhost" value="${DBHOST}"/>
	<property name="dbname" value="${DBNAME}"/>
	<property name="dbuser" value="${DBUSER}"/>
	<property name="dbpassword" value="${DBPASSWORD}"/>
	<property name="agentport" value="${AGENTPORT}"/>
	<property name="serverport" value="${SERVERPORT}"/>
	<property name="url" value="${URL}"/>
	<property name="host" value="${HOST}"/>
	<property name="screenshot_dir" value="${SCREENSHOT_DIR}"/>
	<property name="screenshot_url" value="${SCREENSHOT_URL}"/>

	<target name="buildagent">
		<antcall target="killagent"/>

		<!-- Build agent binaries -->
		<exec executable="./configure" failonerror="on">
			<arg value="--enable-agent"/>
			<arg value="--with-libcurl"/>
			<arg value="--prefix=${basedir}"/>
		</exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg value="clean"/>
		</exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg value="install"/>
		</exec>
	</target>

	<target name="buildserver">
		<antcall target="killserver"/>

		<!-- Build server binaries -->
		<exec executable="./configure" failonerror="on">
			<arg value="--enable-server"/>
			<arg value="--with-${dbenable}"/>
			<arg value="--with-net-snmp"/>
			<arg value="--with-openipmi"/>
			<arg value="--with-ldap"/>
			<arg value="--with-ssh2"/>
			<arg value="--with-libcurl"/>
			<arg value="--with-jabber"/>
			<arg value="--prefix=${basedir}"/>
		</exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg value="clean"/>
		</exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg value="install"/>
		</exec>
	</target>

	<target name="buildproxy">
		<!-- Build proxy binaries -->
		<exec executable="./configure" failonerror="on">
			<arg value="--enable-proxy"/>
			<arg value="--with-${dbenable}"/>
			<arg value="--with-net-snmp"/>
			<arg value="--with-openipmi"/>
			<arg value="--with-ldap"/>
			<arg value="--with-ssh2"/>
			<arg value="--with-libcurl"/>
			<arg value="--with-jabber"/>
			<arg value="--prefix=${basedir}"/>
		</exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg value="clean"/>
		</exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg value="install"/>
		</exec>
	</target>

	<target name="init-common">
		<!-- Create the different build directories -->
		<mkdir dir="build/logs" />
		<exec executable="./bootstrap.sh" failonerror="on"></exec>
		<exec executable="./configure" failonerror="on"></exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg line="dbschema"/>
		</exec>
		<exec executable="make" failonerror="on">
			<arg value="-s"/>
			<arg line="dist"/>
		</exec>
		<copy overwrite="true" file="frontends/php/tests/bootstrap.php.template" tofile="frontends/php/tests/bootstrap.php"/>
		<replace file="frontends/php/tests/bootstrap.php" token="{URL}" value="${url}"/>
		<replace file="frontends/php/tests/bootstrap.php" token="{HOST}" value="${host}"/>
		<replace file="frontends/php/tests/bootstrap.php" token="{SCREENSHOT_DIR}" value="${screenshot_dir}"/>
		<replace file="frontends/php/tests/bootstrap.php" token="{SCREENSHOT_URL}" value="${screenshot_url}"/>
		<replace file="frontends/php/tests/bootstrap.php" token="{BASEDIR}" value="${basedir}"/>
	</target>

	<target name="create-configs" depends="init-common">
		<!-- Create PHP config file -->
		<copy overwrite="true" file="tests/templates/zabbix.conf.php" tofile="frontends/php/conf/zabbix.conf.php"/>
		<replace file="frontends/php/conf/zabbix.conf.php" token="{DBTYPE}" value="${dbtype}"/>
		<replace file="frontends/php/conf/zabbix.conf.php" token="{DBNAME}" value="${dbname}"/>
		<replace file="frontends/php/conf/zabbix.conf.php" token="{DBHOST}" value="${dbhost}"/>
		<replace file="frontends/php/conf/zabbix.conf.php" token="{DBUSER}" value="${dbuser}"/>
		<replace file="frontends/php/conf/zabbix.conf.php" token="{DBPASSWORD}" value="${dbpassword}"/>
		<!-- Create deamon config files -->
		<mkdir dir="etc"/>
		<mkdir dir="tmp"/>
		<copy overwrite="true" file="tests/templates/zabbix_agentd.conf" tofile="etc/zabbix_agentd.conf"/>
		<replace file="etc/zabbix_agentd.conf" token="{AGENTPORT}" value="${agentport}"/>
		<replace file="etc/zabbix_agentd.conf" token="{ROOTDIR}" value="${basedir}"/>

		<copy overwrite="true" file="tests/templates/zabbix_server.conf" tofile="etc/zabbix_server.conf"/>
		<replace file="etc/zabbix_server.conf" token="{SERVERPORT}" value="${serverport}"/>
		<replace file="etc/zabbix_server.conf" token="{ROOTDIR}" value="${basedir}"/>
		<replace file="etc/zabbix_server.conf" token="{DBNAME}" value="${dbname}"/>
		<replace file="etc/zabbix_server.conf" token="{DBHOST}" value="${dbhost}"/>
		<replace file="etc/zabbix_server.conf" token="{DBUSER}" value="${dbuser}"/>
		<replace file="etc/zabbix_server.conf" token="{DBPASSWORD}" value="${dbpassword}"/>
	</target>

	<target name="init-postgresql" depends="create-configs">
		<!-- Create PostgreSQL database -->
		<exec executable="psql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-U '${dbuser}'"/>
			<arg line="-1"/>
			<arg line="--set ON_ERROR_STOP=1"/>
			<arg line="-c 'drop database if exists ${dbname}'"/>
		</exec>
		<exec executable="psql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-U '${dbuser}'"/>
			<arg line="-1"/>
			<arg line="--set ON_ERROR_STOP=1"/>
			<arg line="-c 'create database ${dbname}'"/>
		</exec>
		<exec executable="psql" input="database/postgresql/schema.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-U '${dbuser}'"/>
			<arg line="-1"/>
			<arg line="--set ON_ERROR_STOP=1"/>
			<arg line="${dbname}"/>
		</exec>
		<exec executable="psql" input="database/postgresql/images.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-U '${dbuser}'"/>
			<arg line="-1"/>
			<arg line="--set ON_ERROR_STOP=1"/>
			<arg line="${dbname}"/>
		</exec>
		<exec executable="psql" input="database/postgresql/data.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-U '${dbuser}'"/>
			<arg line="-1"/>
			<arg line="--set ON_ERROR_STOP=1"/>
			<arg line="${dbname}"/>
		</exec>
		<exec executable="psql" input="tests/data/data_test.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-U '${dbuser}'"/>
			<arg line="-1"/>
			<arg line="--set ON_ERROR_STOP=1"/>
			<arg line="${dbname}"/>
		</exec>
	</target>

	<target name="killagent">
		<!-- Kill previously running agent -->
		<exec executable="bash">
			<arg value="-c"/>
			<arg value="kill `ps -fu $USER|grep -v grep|grep ${basedir}/etc/zabbix_agentd.conf|head -1|awk '{print $2}'`"/>
		</exec>
		<!-- Sleep for 2 seconds -->
		<exec executable="sleep" failonerror="off">
			<arg line="2"/>
		</exec>
	</target>

	<target name="killserver">
		<!-- Kill previously running server -->
		<exec executable="bash">
			<arg value="-c"/>
			<arg value="kill `ps -fu $USER|grep -v grep|grep ${basedir}/etc/zabbix_server.conf|head -1|awk '{print $2}'`"/>
		</exec>
		<!-- Sleep for 2 seconds -->
		<exec executable="sleep" failonerror="off">
			<arg line="2"/>
		</exec>
	</target>

	<target name="killdaemons" depends="killserver,killagent"/>

	<target name="sleep5m">
		<!-- Sleep for 5 minutes -->
		<exec executable="sleep" failonerror="off">
			<arg line="300"/>
		</exec>
	</target>

	<target name="runserver" depends="buildserver">
		<!-- Execute Server -->
		<exec executable="./zabbix_server" dir="sbin/" failonerror="on">
			<arg line="--config=${basedir}/etc/zabbix_server.conf"/>
		</exec>
	</target>

	<target name="runagent" depends="buildagent">
		<!-- Execute Agent -->
		<exec executable="./zabbix_agentd" dir="sbin/" failonerror="on">
			<arg line="--config=${basedir}/etc/zabbix_agentd.conf"/>
		</exec>
	</target>

	<target name="init-mysql" depends="create-configs">
		<!-- Create MySQL database -->
		<exec executable="mysql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-u '${dbuser}'"/>
			<arg line="-e 'drop database if exists ${dbname}'"/>
		</exec>
		<exec executable="mysql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-u '${dbuser}'"/>
			<arg line="-e 'create database ${dbname} character set utf8 collate utf8_bin'"/>
		</exec>
		<exec executable="mysql" input="database/mysql/schema.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-u '${dbuser}'"/>
			<arg line="${dbname}"/>
		</exec>
		<exec executable="mysql" input="database/mysql/images.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-u '${dbuser}'"/>
			<arg line="${dbname}"/>
		</exec>
		<exec executable="mysql" input="database/mysql/data.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-u '${dbuser}'"/>
			<arg line="${dbname}"/>
		</exec>
		<exec executable="mysql" input="tests/data/data_test.sql" failonerror="on">
			<arg line="-h '${dbhost}'"/>
			<arg line="-u '${dbuser}'"/>
			<arg line="${dbname}"/>
		</exec>
	</target>

	<target name="test-frontend">
		<exec executable="phpunit" dir="frontends/php/tests" failonerror="off">
			<arg line="--log-junit=${basedir}/build/logs/phpunit.xml --bootstrap=bootstrap.php frontend.php"/>
		</exec>
	</target>

	<target name="build-mysql" depends="init-mysql,runagent,runserver,buildproxy,sleep5m,killdaemons,test-frontend" />
	<target name="build-postgresql" depends="init-postgresql,runagent,runserver,buildproxy,sleep5m,killdaemons,test-frontend" />

	<!-- Default target -->
	<target name="build" depends="build-mysql,build-postgresql" />
</project>
