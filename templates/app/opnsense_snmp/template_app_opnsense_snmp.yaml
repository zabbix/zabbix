zabbix_export:
  version: '7.4'
  template_groups:
    - uuid: a571c0d144b14fd4a87a9d9b2aa9fcd6
      name: Templates/Applications
  templates:
    - uuid: 0c94915edb4c41bf8c627dddb4f68f5a
      template: 'OPNsense by SNMP'
      name: 'OPNsense by SNMP'
      description: |
        Template for monitoring OPNsense by SNMP
        Setup:
          1. Enable bsnmpd daemon by creating new config file "/etc/rc.conf.d/bsnmpd" with the following content:
          bsnmpd_enable="YES"
          2. Uncomment the following lines in "/etc/snmpd.config" file to enable required SNMP modules:
          begemotSnmpdModulePath."hostres" = "/usr/lib/snmp_hostres.so"
          begemotSnmpdModulePath."pf"     = "/usr/lib/snmp_pf.so"
          3. Start bsnmpd daemon with the following command:
          /etc/rc.d/bsnmpd start
          4. Setup a firewall rule to get access from Zabbix proxy or Zabbix server by SNMP (https://docs.opnsense.org/manual/firewall.html).
          5. Link the template to a host.
        
        
        MIBs used:
        BEGEMOT-PF-MIB
        HOST-RESOURCES-MIB
        
        Generated by official Zabbix template tool "Templator"
      vendor:
        name: Zabbix
        version: 7.4-1
      groups:
        - name: Templates/Applications
      items:
        - uuid: daf50788784c439b9775d4d377c17fe9
          name: 'SNMP walk pf network interfaces'
          type: SNMP_AGENT
          snmp_oid: 'walk[1.3.6.1.4.1.12325.1.200.1.8.2]'
          key: net.if.pf.walk
          history: '0'
          value_type: TEXT
          description: |
            MIB: BEGEMOT-PF-MIB
            SNMP walk through pfInterfacesIfTable. The collected data used in network interfaces LLD for dependent item prototypes.
          preprocessing:
            - type: SNMP_WALK_TO_JSON
              parameters:
                - pfInterfacesIfDescr
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.2
                - '0'
                - pfInterfacesIfRefsRule
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.6
                - '0'
                - pfInterfacesIf4BytesInPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.7
                - '0'
                - pfInterfacesIf4BytesInBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.8
                - '0'
                - pfInterfacesIf4BytesOutPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.9
                - '0'
                - pfInterfacesIf4BytesOutBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.10
                - '0'
                - pfInterfacesIf4PktsInPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.11
                - '0'
                - pfInterfacesIf4PktsInBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.12
                - '0'
                - pfInterfacesIf4PktsOutPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.13
                - '0'
                - pfInterfacesIf4PktsOutBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.14
                - '0'
                - pfInterfacesIf6BytesInPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.15
                - '0'
                - pfInterfacesIf6BytesInBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.16
                - '0'
                - pfInterfacesIf6BytesOutPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.17
                - '0'
                - pfInterfacesIf6BytesOutBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.18
                - '0'
                - pfInterfacesIf6PktsInPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.19
                - '0'
                - pfInterfacesIf6PktsInBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.20
                - '0'
                - pfInterfacesIf6PktsOutPass
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.21
                - '0'
                - pfInterfacesIf6PktsOutBlock
                - 1.3.6.1.4.1.12325.1.200.1.8.2.1.22
                - '0'
          tags:
            - tag: component
              value: raw
        - uuid: da65fe5665114ca997894a781aa8a962
          name: 'SNMP walk network interfaces'
          type: SNMP_AGENT
          snmp_oid: 'walk[1.3.6.1.2.1.2.2.1.8,1.3.6.1.2.1.2.2.1.7,1.3.6.1.2.1.31.1.1.1.18,1.3.6.1.2.1.31.1.1.1.1,1.3.6.1.2.1.2.2.1.2,1.3.6.1.2.1.2.2.1.3,1.3.6.1.2.1.31.1.1.1.6,1.3.6.1.2.1.31.1.1.1.10,1.3.6.1.2.1.2.2.1.14,1.3.6.1.2.1.2.2.1.20,1.3.6.1.2.1.2.2.1.19,1.3.6.1.2.1.2.2.1.13,1.3.6.1.2.1.31.1.1.1.15]'
          key: net.if.walk
          history: '0'
          value_type: TEXT
          description: 'Discovering interfaces from IF-MIB.'
          tags:
            - tag: component
              value: raw
        - uuid: 1a075e6ed87c4d40b912956e9c02573f
          name: 'DHCP server status'
          type: DEPENDENT
          key: opnsense.dhcpd.status
          description: |
            MIB: HOST-RESOURCES-MIB
            The status of DHCP server process.
          valuemap:
            name: 'Services status'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.hrSWRunName == ''dhcpd'')].hrSWRunStatus.first()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: opnsense.sw.walk
          tags:
            - tag: component
              value: application
          triggers:
            - uuid: fba46d0094bc4f0e98537ceca27dd6bc
              expression: 'last(/OPNsense by SNMP/opnsense.dhcpd.status)=0'
              name: 'OPNsense: DHCP server is not running'
              opdata: 'Current state: {ITEM.LASTVALUE1}'
              priority: AVERAGE
              description: 'Please check DHCP server settings.'
              tags:
                - tag: scope
                  value: availability
        - uuid: c52c2b9a3d4e4446a8af02e5a51e9c55
          name: 'DNS server status'
          type: DEPENDENT
          key: opnsense.dns.status
          description: |
            MIB: HOST-RESOURCES-MIB
            The status of DNS server process.
          valuemap:
            name: 'Services status'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.hrSWRunName == ''unbound'')].hrSWRunStatus.first()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: opnsense.sw.walk
          tags:
            - tag: component
              value: application
          triggers:
            - uuid: 0e2cbbbd999d476a84cb93a9b7ef42d6
              expression: 'last(/OPNsense by SNMP/opnsense.dns.status)=0'
              name: 'OPNsense: DNS server is not running'
              opdata: 'Current state: {ITEM.LASTVALUE1}'
              priority: AVERAGE
              description: 'Please check DNS server settings.'
              tags:
                - tag: scope
                  value: availability
        - uuid: 4bc80f5cece045cfa103fa9d4e5db9c6
          name: 'Web server status'
          type: DEPENDENT
          key: opnsense.lighttpd.status
          description: |
            MIB: HOST-RESOURCES-MIB
            The status of lighttpd process.
          valuemap:
            name: 'Services status'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.hrSWRunName == ''lighttpd'')].hrSWRunStatus.first()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: opnsense.sw.walk
          tags:
            - tag: component
              value: application
          triggers:
            - uuid: 7864dec91012436f89b728019bf99fda
              expression: 'last(/OPNsense by SNMP/opnsense.lighttpd.status)=0'
              name: 'OPNsense: Web server is not running'
              opdata: 'Current state: {ITEM.LASTVALUE1}'
              priority: AVERAGE
              description: 'Please check lighttpd service status.'
              tags:
                - tag: scope
                  value: availability
        - uuid: 6a77c077e6bb44439ad766de038f71f1
          name: 'Packets with bad offset'
          type: DEPENDENT
          key: opnsense.packets.bad.offset
          value_type: FLOAT
          units: pps
          description: |
            MIB: BEGEMOT-PF-MIB
            True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.
          preprocessing:
            - type: SNMP_WALK_VALUE
              parameters:
                - 1.3.6.1.4.1.12325.1.200.1.2.2.0
                - '0'
            - type: CHANGE_PER_SECOND
          master_item:
            key: opnsense.pf_counters.walk
          tags:
            - tag: component
              value: network
        - uuid: f8503508e3e646c781d637d1aefaf21a
          name: 'Fragmented packets'
          type: DEPENDENT
          key: opnsense.packets.fragment
          value_type: FLOAT
          units: pps
          description: |
            MIB: BEGEMOT-PF-MIB
            True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.
          preprocessing:
            - type: SNMP_WALK_VALUE
              parameters:
                - 1.3.6.1.4.1.12325.1.200.1.2.3.0
                - '0'
            - type: CHANGE_PER_SECOND
          master_item:
            key: opnsense.pf_counters.walk
          tags:
            - tag: component
              value: network
        - uuid: ae0bfb3bd36e4b05ae490c4b70ba1313
          name: 'Packets matched a filter rule'
          type: DEPENDENT
          key: opnsense.packets.match
          value_type: FLOAT
          units: pps
          description: |
            MIB: BEGEMOT-PF-MIB
            True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.
          preprocessing:
            - type: SNMP_WALK_VALUE
              parameters:
                - 1.3.6.1.4.1.12325.1.200.1.2.1.0
                - '0'
            - type: CHANGE_PER_SECOND
          master_item:
            key: opnsense.pf_counters.walk
          tags:
            - tag: component
              value: network
        - uuid: 3983366c271f4e9896d738c58f2d850f
          name: 'Packets dropped due to memory limitation'
          type: DEPENDENT
          key: opnsense.packets.mem.drop
          value_type: FLOAT
          units: pps
          description: |
            MIB: BEGEMOT-PF-MIB
            True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.
          preprocessing:
            - type: SNMP_WALK_VALUE
              parameters:
                - 1.3.6.1.4.1.12325.1.200.1.2.6.0
                - '0'
            - type: CHANGE_PER_SECOND
          master_item:
            key: opnsense.pf_counters.walk
          tags:
            - tag: component
              value: network
        - uuid: 7c8d4623d2fd4b77b0749caa67530bb2
          name: 'Normalized packets'
          type: DEPENDENT
          key: opnsense.packets.normalize
          value_type: FLOAT
          units: pps
          description: |
            MIB: BEGEMOT-PF-MIB
            True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.
          preprocessing:
            - type: SNMP_WALK_VALUE
              parameters:
                - 1.3.6.1.4.1.12325.1.200.1.2.5.0
                - '0'
            - type: CHANGE_PER_SECOND
          master_item:
            key: opnsense.pf_counters.walk
          tags:
            - tag: component
              value: network
        - uuid: 7b845d8282ee4c1394c71c22ada31da9
          name: 'Short packets'
          type: DEPENDENT
          key: opnsense.packets.short
          value_type: FLOAT
          units: pps
          description: |
            MIB: BEGEMOT-PF-MIB
            True if the packet was logged with the specified packet filter reason code. The known codes are: match, bad-offset, fragment, short, normalize, and memory.
          preprocessing:
            - type: SNMP_WALK_VALUE
              parameters:
                - 1.3.6.1.4.1.12325.1.200.1.2.4.0
                - '0'
            - type: CHANGE_PER_SECOND
          master_item:
            key: opnsense.pf_counters.walk
          tags:
            - tag: component
              value: network
        - uuid: f2b82b136ea943909a7b6317bf8b7785
          name: 'Packet filter running status'
          type: SNMP_AGENT
          snmp_oid: 'get[1.3.6.1.4.1.12325.1.200.1.1.1.0]'
          key: opnsense.pf.status
          description: |
            MIB: BEGEMOT-PF-MIB
            True if packet filter is currently enabled.
          valuemap:
            name: 'SNMPv2-TC::TruthValue'
          tags:
            - tag: component
              value: application
            - tag: component
              value: health
          triggers:
            - uuid: 42d9a74d984d4ac2bf778be74cd8588f
              expression: 'last(/OPNsense by SNMP/opnsense.pf.status)<>1'
              name: 'OPNsense: Packet filter is not running'
              opdata: 'Current running state: {ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'Please check PF status.'
              tags:
                - tag: scope
                  value: availability
        - uuid: 6898f6b638234788b9ac07818d40f800
          name: 'SNMP walk pf counters'
          type: SNMP_AGENT
          snmp_oid: 'walk[1.3.6.1.4.1.12325.1.200.1.2]'
          key: opnsense.pf_counters.walk
          history: '0'
          value_type: TEXT
          description: |
            MIB: BEGEMOT-PF-MIB
            SNMP walk through pfCounter. The collected data used in dependent pf counter items.
          tags:
            - tag: component
              value: raw
        - uuid: 289cece23b5d4f17ba50d0373db4ed33
          name: 'Firewall rules count'
          type: SNMP_AGENT
          snmp_oid: 'get[1.3.6.1.4.1.12325.1.200.1.11.1.0]'
          key: opnsense.rules.count
          description: |
            MIB: BEGEMOT-PF-MIB
            The number of labeled filter rules on this system.
          tags:
            - tag: component
              value: firewall
        - uuid: 6e40ddbf15a54b0e8ae2d1c52d5c2eba
          name: 'Source tracking table current'
          type: SNMP_AGENT
          snmp_oid: 'get[1.3.6.1.4.1.12325.1.200.1.4.1.0]'
          key: opnsense.source.tracking.table.count
          description: |
            MIB: BEGEMOT-PF-MIB
            Number of entries in the source tracking table.
          tags:
            - tag: component
              value: network
        - uuid: a9b848d5c2254efdaf74ff48ce4003c4
          name: 'Source tracking table limit'
          type: SNMP_AGENT
          snmp_oid: 'get[1.3.6.1.4.1.12325.1.200.1.5.2.0]'
          key: opnsense.source.tracking.table.limit
          description: |
            MIB: BEGEMOT-PF-MIB
            Maximum number of 'sticky-address' or 'source-track' rules in the ruleset.
          tags:
            - tag: component
              value: network
        - uuid: 1452fc4e67564233b12dc892fde1959a
          name: 'Source tracking table utilization in %'
          type: CALCULATED
          key: opnsense.source.tracking.table.pused
          value_type: FLOAT
          units: '%'
          params: 'last(//opnsense.source.tracking.table.count) * 100 / last(//opnsense.source.tracking.table.limit)'
          description: 'Utilization of source tracking table in %.'
          tags:
            - tag: component
              value: network
          triggers:
            - uuid: d1f03d136f30401b8f70cbc3196446ee
              expression: 'min(/OPNsense by SNMP/opnsense.source.tracking.table.pused,#3)>{$SOURCE.TRACKING.TABLE.UTIL.MAX}'
              name: 'OPNsense: Source tracking table usage is high'
              event_name: 'OPNsense: Source tracking table usage more than {$SOURCE.TRACKING.TABLE.UTIL.MAX}.'
              opdata: 'Current utilization: {ITEM.LASTVALUE1}'
              priority: WARNING
              description: 'Please check the number of sticky connections.'
              tags:
                - tag: scope
                  value: capacity
        - uuid: 1c399a2204bc44d4a9b1a4017840fd75
          name: 'States table current'
          type: SNMP_AGENT
          snmp_oid: 'get[1.3.6.1.4.1.12325.1.200.1.3.1.0]'
          key: opnsense.state.table.count
          description: |
            MIB: BEGEMOT-PF-MIB
            Number of entries in the state table.
          tags:
            - tag: component
              value: network
        - uuid: 3bd8ea1e2cb44b4cb0f7d16a9339b9e4
          name: 'States table limit'
          type: SNMP_AGENT
          snmp_oid: 'get[1.3.6.1.4.1.12325.1.200.1.5.1.0]'
          key: opnsense.state.table.limit
          description: |
            MIB: BEGEMOT-PF-MIB
            Maximum number of 'keep state' rules in the ruleset.
          tags:
            - tag: component
              value: network
        - uuid: 17a0f633e2a14e63b0282b785a66c62a
          name: 'States table utilization in %'
          type: CALCULATED
          key: opnsense.state.table.pused
          value_type: FLOAT
          units: '%'
          params: 'last(//opnsense.state.table.count) * 100 / last(//opnsense.state.table.limit)'
          description: 'Utilization of state table in %.'
          tags:
            - tag: component
              value: network
          triggers:
            - uuid: f31e301def314e9b81ee0f8a26dc1e37
              expression: 'min(/OPNsense by SNMP/opnsense.state.table.pused,#3)>{$STATE.TABLE.UTIL.MAX}'
              name: 'OPNsense: State table usage is high'
              event_name: 'OPNsense: State table usage more than {$STATE.TABLE.UTIL.MAX}.'
              opdata: 'Current utilization: {ITEM.LASTVALUE1}'
              priority: WARNING
              description: 'Please check the number of connections.'
              tags:
                - tag: scope
                  value: capacity
        - uuid: b7582f10abf44e3aa4555b3d03de9c86
          name: 'SNMP walk software'
          type: SNMP_AGENT
          snmp_oid: 'walk[1.3.6.1.2.1.25.4.2.1.2,1.3.6.1.2.1.25.4.2.1.7]'
          key: opnsense.sw.walk
          history: '0'
          value_type: TEXT
          description: |
            MIB: HOST-RESOURCES-MIB
            SNMP walk through hrSWRunTable. The collected data used in dependent service status items.
          preprocessing:
            - type: SNMP_WALK_TO_JSON
              parameters:
                - hrSWRunName
                - 1.3.6.1.2.1.25.4.2.1.2
                - '0'
                - hrSWRunStatus
                - 1.3.6.1.2.1.25.4.2.1.7
                - '0'
          tags:
            - tag: component
              value: raw
        - uuid: 00f2e8aa55754a7b9063afc1d7749d85
          name: 'SNMP agent availability'
          type: INTERNAL
          key: 'zabbix[host,snmp,available]'
          description: |
            Availability of SNMP checks on the host. The value of this item corresponds to availability icons in the host list.
            Possible values:
            0 - not available
            1 - available
            2 - unknown
          valuemap:
            name: zabbix.host.available
          tags:
            - tag: component
              value: health
            - tag: component
              value: network
          triggers:
            - uuid: f2cb074945624a8184ceb1ab3d3b2f52
              expression: 'max(/OPNsense by SNMP/zabbix[host,snmp,available],{$SNMP.TIMEOUT})=0'
              name: 'OPNsense: No SNMP data collection'
              opdata: 'Current state: {ITEM.LASTVALUE1}'
              priority: WARNING
              description: 'SNMP is not available for polling. Please check device connectivity and SNMP settings.'
              tags:
                - tag: scope
                  value: availability
      discovery_rules:
        - uuid: d7830514425f47eda3ac8ec20a1801b9
          name: 'Network interfaces discovery'
          type: DEPENDENT
          key: opnsense.net.if.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#IFADMINSTATUS}'
                value: '{$NET.IF.IFADMINSTATUS.MATCHES}'
              - macro: '{#IFADMINSTATUS}'
                value: '{$NET.IF.IFADMINSTATUS.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
              - macro: '{#IFALIAS}'
                value: '{$NET.IF.IFALIAS.MATCHES}'
              - macro: '{#IFALIAS}'
                value: '{$NET.IF.IFALIAS.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
              - macro: '{#IFDESCR}'
                value: '{$NET.IF.IFDESCR.MATCHES}'
              - macro: '{#IFDESCR}'
                value: '{$NET.IF.IFDESCR.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
              - macro: '{#IFNAME}'
                value: '@Network interfaces for discovery'
              - macro: '{#IFNAME}'
                value: '{$NET.IF.IFNAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
              - macro: '{#IFOPERSTATUS}'
                value: '{$NET.IF.IFOPERSTATUS.MATCHES}'
              - macro: '{#IFOPERSTATUS}'
                value: '{$NET.IF.IFOPERSTATUS.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
              - macro: '{#IFTYPE}'
                value: '{$NET.IF.IFTYPE.MATCHES}'
              - macro: '{#IFTYPE}'
                value: '{$NET.IF.IFTYPE.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovering interfaces from IF-MIB.'
          item_prototypes:
            - uuid: 3a687275a219460c92433bda90be8d59
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 traffic blocked'
              type: DEPENDENT
              key: 'net.if.in.block.v4.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv4 bits per second blocked coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4BytesInBlock.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: d34be70208614a599e8706ede8d28f6d
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 packets blocked'
              type: DEPENDENT
              key: 'net.if.in.block.v4.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv4 packets blocked coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4PktsInBlock.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: e6bc104196ad44f8abf8b7609b464f07
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 traffic blocked'
              type: DEPENDENT
              key: 'net.if.in.block.v6.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv6 bits per second blocked coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6BytesInBlock.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: b9335034e4f94bb1b15f5b74a6467f89
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 packets blocked'
              type: DEPENDENT
              key: 'net.if.in.block.v6.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv6 packets blocked coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6PktsInBlock.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 77ad7ea9f85d419a81d99531ba71ef1d
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound packets discarded'
              type: DEPENDENT
              key: 'net.if.in.discards[{#SNMPINDEX}]'
              description: |
                MIB: IF-MIB
                The number of inbound packets which were chosen to be discarded
                even though no errors had been detected to prevent their being deliverable to a higher-layer protocol.
                One possible reason for discarding such a packet could be to free up buffer space.
                Discontinuities in the value of this counter can occur at re-initialization of the management system,
                and at other times as indicated by the value of ifCounterDiscontinuityTime.
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.2.2.1.13.{#SNMPINDEX}'
                    - '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: c6f650d534c94a1bb0bf1faca829c538
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound packets with errors'
              type: DEPENDENT
              key: 'net.if.in.errors[{#SNMPINDEX}]'
              description: |
                MIB: IF-MIB
                For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character-oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.2.2.1.14.{#SNMPINDEX}'
                    - '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
              trigger_prototypes:
                - uuid: 5a58e9ffee1f45c4a4f859c1f0b7c2dc
                  expression: 'min(/OPNsense by SNMP/net.if.in.errors[{#SNMPINDEX}],5m)>{$IF.ERRORS.WARN:"{#IFNAME}"}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'max(/OPNsense by SNMP/net.if.in.errors[{#SNMPINDEX}],5m)<{$IF.ERRORS.WARN:"{#IFNAME}"}*0.8'
                  name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High input error rate'
                  event_name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High input error rate ( > {$IF.ERRORS.WARN:"{#IFNAME}"} for 5m)'
                  opdata: 'errors in: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'It recovers when it is below 80% of the `{$IF.ERRORS.WARN:"{#IFNAME}"}` threshold.'
                  dependencies:
                    - name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: Link down'
                      expression: '{$IFCONTROL:"{#IFNAME}"}=1 and (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])=2)'
                  tags:
                    - tag: scope
                      value: availability
            - uuid: da65b40184d84a2a98dd595e17794875
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 traffic passed'
              type: DEPENDENT
              key: 'net.if.in.pass.v4.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv4 bits per second passed coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4BytesInPass.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 367629501e4248e0b6de19e7123b0df6
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv4 packets passed'
              type: DEPENDENT
              key: 'net.if.in.pass.v4.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv4 packets passed coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4PktsInPass.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: a21b0c97af544225971a6d0a2ddeaf2c
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 traffic passed'
              type: DEPENDENT
              key: 'net.if.in.pass.v6.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv6 bits per second passed coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6BytesInPass.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 23daac718d7743248b4e9e5dd9d537bf
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound IPv6 packets passed'
              type: DEPENDENT
              key: 'net.if.in.pass.v6.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv6 packets passed coming in on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6PktsInPass.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: df19df9d63604ec294a49478a0963da2
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Bits received'
              type: DEPENDENT
              key: 'net.if.in[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: IF-MIB
                The total number of octets received on the interface, including framing characters. This object is a 64-bit version of ifInOctets. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.31.1.1.1.6.{#SNMPINDEX}'
                    - '0'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 0be1b473b51541c38012847e52ae9e1f
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 traffic blocked'
              type: DEPENDENT
              key: 'net.if.out.block.v4.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv4 bits per second blocked going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4BytesOutBlock.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 7f335123af85457cb5b8c43279f26b27
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 packets blocked'
              type: DEPENDENT
              key: 'net.if.out.block.v4.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv4 packets blocked going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4PktsOutBlock.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: dae11126c26543a7afd3c169fbc76cd5
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 traffic blocked'
              type: DEPENDENT
              key: 'net.if.out.block.v6.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv6 bits per second blocked going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6BytesOutBlock.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: a877f2c800874ce9bbf972ef8eb277be
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 packets blocked'
              type: DEPENDENT
              key: 'net.if.out.block.v6.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv6 packets blocked going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6PktsOutBlock.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: d80bb6eac4ab43b58c6c785340b77494
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound packets discarded'
              type: DEPENDENT
              key: 'net.if.out.discards[{#SNMPINDEX}]'
              description: |
                MIB: IF-MIB
                The number of outbound packets which were chosen to be discarded
                even though no errors had been detected to prevent their being deliverable to a higher-layer protocol.
                One possible reason for discarding such a packet could be to free up buffer space.
                Discontinuities in the value of this counter can occur at re-initialization of the management system,
                and at other times as indicated by the value of ifCounterDiscontinuityTime.
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.2.2.1.19.{#SNMPINDEX}'
                    - '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 357f0ab9a5814f06a04e5e2983226e26
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound packets with errors'
              type: DEPENDENT
              key: 'net.if.out.errors[{#SNMPINDEX}]'
              description: |
                MIB: IF-MIB
                For packet-oriented interfaces, the number of outbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character-oriented or fixed-length interfaces, the number of outbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.2.2.1.20.{#SNMPINDEX}'
                    - '0'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
              trigger_prototypes:
                - uuid: 9d6dafdae44343f1a4e0934ec44da7b3
                  expression: 'min(/OPNsense by SNMP/net.if.out.errors[{#SNMPINDEX}],5m)>{$IF.ERRORS.WARN:"{#IFNAME}"}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'max(/OPNsense by SNMP/net.if.out.errors[{#SNMPINDEX}],5m)<{$IF.ERRORS.WARN:"{#IFNAME}"}*0.8'
                  name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High output error rate'
                  event_name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High output error rate ( > {$IF.ERRORS.WARN:"{#IFNAME}"} for 5m)'
                  opdata: 'errors out: {ITEM.LASTVALUE2}'
                  priority: WARNING
                  description: 'It recovers when it is below 80% of the `{$IF.ERRORS.WARN:"{#IFNAME}"}` threshold.'
                  dependencies:
                    - name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: Link down'
                      expression: '{$IFCONTROL:"{#IFNAME}"}=1 and (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])=2)'
                  tags:
                    - tag: scope
                      value: availability
            - uuid: be3ab46dc43d45da88917689e02b9f70
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 traffic passed'
              type: DEPENDENT
              key: 'net.if.out.pass.v4.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv4 bits per second passed going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4BytesOutPass.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: ec0b70c2c7d8452aaefefb737f567735
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv4 packets passed'
              type: DEPENDENT
              key: 'net.if.out.pass.v4.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv4 packets passed going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf4PktsOutPass.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 993af213503d4cf8b921ed630a01e7f9
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 traffic passed'
              type: DEPENDENT
              key: 'net.if.out.pass.v6.bps[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: BEGEMOT-PF-MIB
                IPv6 bits per second passed going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6BytesOutPass.first()'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: d4c3d02a4e024d1a881789f9588c05f7
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound IPv6 packets passed'
              type: DEPENDENT
              key: 'net.if.out.pass.v6.pps[{#SNMPINDEX}]'
              units: pps
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of IPv6 packets passed going out on this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIf6PktsOutPass.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 1f6a8e8f3cc746249001293fba59fcf3
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Bits sent'
              type: DEPENDENT
              key: 'net.if.out[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: IF-MIB
                The total number of octets transmitted out of the interface, including framing characters. This object is a 64-bit version of ifOutOctets.Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.31.1.1.1.10.{#SNMPINDEX}'
                    - '0'
                - type: CHANGE_PER_SECOND
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: bce50f45634d41b6a4ab8616e3a4d804
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Rules references count'
              type: DEPENDENT
              key: 'net.if.rules.refs[{#SNMPINDEX}]'
              description: |
                MIB: BEGEMOT-PF-MIB
                The number of rules referencing this interface.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.pfInterfacesIfDescr == ''{#IFDESCR}'')].pfInterfacesIfRefsRule.first()'
              master_item:
                key: net.if.pf.walk
              tags:
                - tag: component
                  value: firewall
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 76c91001f4b64ba99c132c3dd476cb88
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Speed'
              type: DEPENDENT
              key: 'net.if.speed[{#SNMPINDEX}]'
              units: bps
              description: |
                MIB: IF-MIB
                An estimate of the interface's current bandwidth in units of 1,000,000 bits per second. If this object reports a value of `n' then the speed of the interface is somewhere in the range of `n-500,000' to`n+499,999'.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth. For a sub-layer which has no concept of bandwidth, this object should be zero.
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.31.1.1.1.15.{#SNMPINDEX}'
                    - '0'
                - type: MULTIPLIER
                  parameters:
                    - '1000000'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
            - uuid: 1b352c1f96e84f2fb72c6414c0e15b29
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Operational status'
              type: DEPENDENT
              key: 'net.if.status[{#SNMPINDEX}]'
              description: |
                MIB: IF-MIB
                The current operational state of the interface.
                - The testing(3) state indicates that no operational packet scan be passed
                - If ifAdminStatus is down(2) then ifOperStatus should be down(2)
                - If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic
                - It should change todormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection)
                - It should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state
                - It should remain in the notPresent(6) state if the interface has missing(typically, hardware) components.
              valuemap:
                name: 'IF-MIB::ifOperStatus'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.2.2.1.8.{#SNMPINDEX}'
                    - '0'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 6h
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
              trigger_prototypes:
                - uuid: 4a189b213b8e40589be007367361d70e
                  expression: '{$IFCONTROL:"{#IFNAME}"}=1 and (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])=2)'
                  name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: Link down'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: |
                    This trigger expression works as follows:
                    1. It can be triggered if the operations status is down.
                    2. `{$IFCONTROL:"{#IFNAME}"}=1` - a user can redefine context macro to value - 0. That marks this interface as not important. No new trigger will be fired if this interface is down.
                  tags:
                    - tag: scope
                      value: availability
            - uuid: 2874d024da724dc687d0d8fa940fcf87
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Interface type'
              type: DEPENDENT
              key: 'net.if.type[{#SNMPINDEX}]'
              description: |
                MIB: IF-MIB
                The type of interface.
                Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA),
                through updating the syntax of the IANAifType textual convention.
              valuemap:
                name: 'IF-MIB::ifType'
              preprocessing:
                - type: SNMP_WALK_VALUE
                  parameters:
                    - '1.3.6.1.2.1.2.2.1.3.{#SNMPINDEX}'
                    - '0'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 6h
              master_item:
                key: net.if.walk
              tags:
                - tag: component
                  value: network
                - tag: description
                  value: '{#IFALIAS}'
                - tag: interface
                  value: '{#IFNAME}'
          trigger_prototypes:
            - uuid: e351276dfe6a43db88bdb437d2ef4a8e
              expression: |
                change(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])<0 and last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])>0
                and (
                last(/OPNsense by SNMP/net.if.type[{#SNMPINDEX}])=6 or
                last(/OPNsense by SNMP/net.if.type[{#SNMPINDEX}])=7 or
                last(/OPNsense by SNMP/net.if.type[{#SNMPINDEX}])=11 or
                last(/OPNsense by SNMP/net.if.type[{#SNMPINDEX}])=62 or
                last(/OPNsense by SNMP/net.if.type[{#SNMPINDEX}])=69 or
                last(/OPNsense by SNMP/net.if.type[{#SNMPINDEX}])=117
                )
                and
                (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])<>2)
              recovery_mode: RECOVERY_EXPRESSION
              recovery_expression: |
                (change(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])>0 and last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}],#2)>0) or
                (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])=2)
              name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: Ethernet has changed to lower speed than it was before'
              opdata: 'Current reported speed: {ITEM.LASTVALUE1}'
              priority: INFO
              description: 'This Ethernet connection has transitioned down from its known maximum speed. This might be a sign of autonegotiation issues. Acknowledge to close the problem manually.'
              dependencies:
                - name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: Link down'
                  expression: '{$IFCONTROL:"{#IFNAME}"}=1 and (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])=2)'
              tags:
                - tag: scope
                  value: capacity
            - uuid: d9a23c4dee9c4fd0862748923d656023
              expression: |
                (avg(/OPNsense by SNMP/net.if.in[{#SNMPINDEX}],15m)>({$IF.UTIL.MAX:"{#IFNAME}"}/100)*last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])) and
                last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])>0
              recovery_mode: RECOVERY_EXPRESSION
              recovery_expression: 'avg(/OPNsense by SNMP/net.if.in[{#SNMPINDEX}],15m)<(({$IF.UTIL.MAX:"{#IFNAME}"}-3)/100)*last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])'
              name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High inbound bandwidth usage'
              event_name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High inbound bandwidth usage ( > {$IF.UTIL.MAX:"{#IFNAME}"}% )'
              opdata: 'In: {ITEM.LASTVALUE1}, speed: {ITEM.LASTVALUE2}'
              priority: WARNING
              description: 'The utilization of the network interface is close to its estimated maximum bandwidth.'
              dependencies:
                - name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: Link down'
                  expression: '{$IFCONTROL:"{#IFNAME}"}=1 and (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])=2)'
              tags:
                - tag: scope
                  value: performance
            - uuid: 4c120cefd9dd4f8aa257023610b3ed19
              expression: |
                (avg(/OPNsense by SNMP/net.if.out[{#SNMPINDEX}],15m)>({$IF.UTIL.MAX:"{#IFNAME}"}/100)*last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])) and
                last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])>0
              recovery_mode: RECOVERY_EXPRESSION
              recovery_expression: 'avg(/OPNsense by SNMP/net.if.out[{#SNMPINDEX}],15m)<(({$IF.UTIL.MAX:"{#IFNAME}"}-3)/100)*last(/OPNsense by SNMP/net.if.speed[{#SNMPINDEX}])'
              name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High outbound bandwidth usage'
              event_name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: High outbound bandwidth usage ( > {$IF.UTIL.MAX:"{#IFNAME}"}% )'
              opdata: 'Out: {ITEM.LASTVALUE1}, speed: {ITEM.LASTVALUE2}'
              priority: WARNING
              description: 'The utilization of the network interface is close to its estimated maximum bandwidth.'
              dependencies:
                - name: 'OPNsense: Interface [{#IFNAME}({#IFALIAS})]: Link down'
                  expression: '{$IFCONTROL:"{#IFNAME}"}=1 and (last(/OPNsense by SNMP/net.if.status[{#SNMPINDEX}])=2)'
              tags:
                - tag: scope
                  value: performance
          graph_prototypes:
            - uuid: d9c786ac274149ac9145499a85d25c35
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound packet filter traffic'
              graph_items:
                - color: 1A7C11
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.pass.v4.bps[{#SNMPINDEX}]'
                - sortorder: '1'
                  color: F63100
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.block.v4.bps[{#SNMPINDEX}]'
                - sortorder: '2'
                  color: 2774A4
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.pass.v6.bps[{#SNMPINDEX}]'
                - sortorder: '3'
                  color: A54F10
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.block.v6.bps[{#SNMPINDEX}]'
                - sortorder: '4'
                  color: 6C59DC
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.pass.v4.pps[{#SNMPINDEX}]'
                - sortorder: '5'
                  color: FC6EA3
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.block.v4.pps[{#SNMPINDEX}]'
                - sortorder: '6'
                  color: AC8C14
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.pass.v6.pps[{#SNMPINDEX}]'
                - sortorder: '7'
                  color: 611F27
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.block.v6.pps[{#SNMPINDEX}]'
            - uuid: ab44b919a9d94955b27bf9a4499e4bf5
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Network traffic'
              graph_items:
                - drawtype: GRADIENT_LINE
                  color: 1A7C11
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in[{#SNMPINDEX}]'
                - sortorder: '1'
                  drawtype: BOLD_LINE
                  color: 2774A4
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out[{#SNMPINDEX}]'
                - sortorder: '2'
                  color: F63100
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.errors[{#SNMPINDEX}]'
                - sortorder: '3'
                  color: A54F10
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.errors[{#SNMPINDEX}]'
                - sortorder: '4'
                  color: FC6EA3
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.discards[{#SNMPINDEX}]'
                - sortorder: '5'
                  color: 6C59DC
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.in.discards[{#SNMPINDEX}]'
            - uuid: 21b603de7402416fb2f472e56010f5f6
              name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound packet filter traffic'
              graph_items:
                - color: 1A7C11
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.pass.v4.bps[{#SNMPINDEX}]'
                - sortorder: '1'
                  color: F63100
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.block.v4.bps[{#SNMPINDEX}]'
                - sortorder: '2'
                  color: 2774A4
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.pass.v6.bps[{#SNMPINDEX}]'
                - sortorder: '3'
                  color: A54F10
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.block.v6.bps[{#SNMPINDEX}]'
                - sortorder: '4'
                  color: 6C59DC
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.pass.v4.pps[{#SNMPINDEX}]'
                - sortorder: '5'
                  color: FC6EA3
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.block.v4.pps[{#SNMPINDEX}]'
                - sortorder: '6'
                  color: AC8C14
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.pass.v6.pps[{#SNMPINDEX}]'
                - sortorder: '7'
                  color: 611F27
                  yaxisside: RIGHT
                  item:
                    host: 'OPNsense by SNMP'
                    key: 'net.if.out.block.v6.pps[{#SNMPINDEX}]'
          master_item:
            key: net.if.walk
          preprocessing:
            - type: SNMP_WALK_TO_JSON
              parameters:
                - '{#IFOPERSTATUS}'
                - 1.3.6.1.2.1.2.2.1.8
                - '0'
                - '{#IFADMINSTATUS}'
                - 1.3.6.1.2.1.2.2.1.7
                - '0'
                - '{#IFALIAS}'
                - 1.3.6.1.2.1.31.1.1.1.18
                - '0'
                - '{#IFNAME}'
                - 1.3.6.1.2.1.31.1.1.1.1
                - '0'
                - '{#IFDESCR}'
                - 1.3.6.1.2.1.2.2.1.2
                - '0'
                - '{#IFTYPE}'
                - 1.3.6.1.2.1.2.2.1.3
                - '0'
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
      tags:
        - tag: class
          value: software
        - tag: target
          value: opnsense
      macros:
        - macro: '{$IF.ERRORS.WARN}'
          value: '2'
          description: 'Threshold of error packets rate for warning trigger. Can be used with interface name as context.'
        - macro: '{$IF.UTIL.MAX}'
          value: '90'
          description: 'Threshold of interface bandwidth utilization for warning trigger in %. Can be used with interface name as context.'
        - macro: '{$IFCONTROL}'
          value: '1'
          description: 'Macro for operational state of the interface for link down trigger. Can be used with interface name as context.'
        - macro: '{$NET.IF.IFADMINSTATUS.MATCHES}'
          value: '^.*'
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFADMINSTATUS.NOT_MATCHES}'
          value: ^2$
          description: 'Ignore down(2) administrative status.'
        - macro: '{$NET.IF.IFALIAS.MATCHES}'
          value: '.*'
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFALIAS.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFDESCR.MATCHES}'
          value: '.*'
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFDESCR.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFNAME.NOT_MATCHES}'
          value: '(^pflog[0-9.]*$|^pfsync[0-9.]*$)'
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFOPERSTATUS.MATCHES}'
          value: '^.*$'
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFOPERSTATUS.NOT_MATCHES}'
          value: ^6$
          description: 'Ignore notPresent(6).'
        - macro: '{$NET.IF.IFTYPE.MATCHES}'
          value: '.*'
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$NET.IF.IFTYPE.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'This macro is used in filters of network interfaces discovery rule.'
        - macro: '{$SNMP.TIMEOUT}'
          value: 5m
          description: 'The time interval for SNMP availability trigger.'
        - macro: '{$SOURCE.TRACKING.TABLE.UTIL.MAX}'
          value: '90'
          description: 'Threshold of source tracking table utilization trigger in %.'
        - macro: '{$STATE.TABLE.UTIL.MAX}'
          value: '90'
          description: 'Threshold of state table utilization trigger in %.'
      dashboards:
        - uuid: 8504c5b2ef0848aa972ef39258de6857
          name: 'OPNsense: Overview'
          pages:
            - name: 'Packet filter'
              widgets:
                - type: graph
                  width: '72'
                  height: '10'
                  fields:
                    - type: GRAPH
                      name: graphid.0
                      value:
                        host: 'OPNsense by SNMP'
                        name: 'OPNsense: Packet filter reason codes'
                    - type: STRING
                      name: reference
                      value: AAAAA
            - name: 'Network traffic'
              widgets:
                - type: graphprototype
                  width: '72'
                  height: '10'
                  fields:
                    - type: INTEGER
                      name: columns
                      value: '1'
                    - type: GRAPH_PROTOTYPE
                      name: graphid.0
                      value:
                        host: 'OPNsense by SNMP'
                        name: 'Interface [{#IFNAME}({#IFALIAS})]: Inbound packet filter traffic'
                    - type: STRING
                      name: reference
                      value: AAAAB
                - type: graphprototype
                  'y': '10'
                  width: '72'
                  height: '10'
                  fields:
                    - type: INTEGER
                      name: columns
                      value: '1'
                    - type: GRAPH_PROTOTYPE
                      name: graphid.0
                      value:
                        host: 'OPNsense by SNMP'
                        name: 'Interface [{#IFNAME}({#IFALIAS})]: Outbound packet filter traffic'
                    - type: STRING
                      name: reference
                      value: AAAAC
                - type: graphprototype
                  'y': '20'
                  width: '72'
                  height: '10'
                  fields:
                    - type: INTEGER
                      name: columns
                      value: '1'
                    - type: GRAPH_PROTOTYPE
                      name: graphid.0
                      value:
                        host: 'OPNsense by SNMP'
                        name: 'Interface [{#IFNAME}({#IFALIAS})]: Network traffic'
                    - type: STRING
                      name: reference
                      value: AAAAD
      valuemaps:
        - uuid: b556be6037b449139eab7830cdab494a
          name: 'IF-MIB::ifOperStatus'
          mappings:
            - value: '1'
              newvalue: up
            - value: '2'
              newvalue: down
            - value: '3'
              newvalue: testing
            - value: '4'
              newvalue: unknown
            - value: '5'
              newvalue: dormant
            - value: '6'
              newvalue: notPresent
            - value: '7'
              newvalue: lowerLayerDown
        - uuid: c9a24f17cf8243feb44825d707132180
          name: 'IF-MIB::ifType'
          mappings:
            - value: '1'
              newvalue: other
            - value: '2'
              newvalue: regular1822
            - value: '3'
              newvalue: hdh1822
            - value: '4'
              newvalue: ddnX25
            - value: '5'
              newvalue: rfc877x25
            - value: '6'
              newvalue: ethernetCsmacd
            - value: '7'
              newvalue: iso88023Csmacd
            - value: '8'
              newvalue: iso88024TokenBus
            - value: '9'
              newvalue: iso88025TokenRing
            - value: '10'
              newvalue: iso88026Man
            - value: '11'
              newvalue: starLan
            - value: '12'
              newvalue: proteon10Mbit
            - value: '13'
              newvalue: proteon80Mbit
            - value: '14'
              newvalue: hyperchannel
            - value: '15'
              newvalue: fddi
            - value: '16'
              newvalue: lapb
            - value: '17'
              newvalue: sdlc
            - value: '18'
              newvalue: ds1
            - value: '19'
              newvalue: e1
            - value: '20'
              newvalue: basicISDN
            - value: '21'
              newvalue: primaryISDN
            - value: '22'
              newvalue: propPointToPointSerial
            - value: '23'
              newvalue: ppp
            - value: '24'
              newvalue: softwareLoopback
            - value: '25'
              newvalue: eon
            - value: '26'
              newvalue: ethernet3Mbit
            - value: '27'
              newvalue: nsip
            - value: '28'
              newvalue: slip
            - value: '29'
              newvalue: ultra
            - value: '30'
              newvalue: ds3
            - value: '31'
              newvalue: sip
            - value: '32'
              newvalue: frameRelay
            - value: '33'
              newvalue: rs232
            - value: '34'
              newvalue: para
            - value: '35'
              newvalue: arcnet
            - value: '36'
              newvalue: arcnetPlus
            - value: '37'
              newvalue: atm
            - value: '38'
              newvalue: miox25
            - value: '39'
              newvalue: sonet
            - value: '40'
              newvalue: x25ple
            - value: '41'
              newvalue: iso88022llc
            - value: '42'
              newvalue: localTalk
            - value: '43'
              newvalue: smdsDxi
            - value: '44'
              newvalue: frameRelayService
            - value: '45'
              newvalue: v35
            - value: '46'
              newvalue: hssi
            - value: '47'
              newvalue: hippi
            - value: '48'
              newvalue: modem
            - value: '49'
              newvalue: aal5
            - value: '50'
              newvalue: sonetPath
            - value: '51'
              newvalue: sonetVT
            - value: '52'
              newvalue: smdsIcip
            - value: '53'
              newvalue: propVirtual
            - value: '54'
              newvalue: propMultiplexor
            - value: '55'
              newvalue: ieee80212
            - value: '56'
              newvalue: fibreChannel
            - value: '57'
              newvalue: hippiInterface
            - value: '58'
              newvalue: frameRelayInterconnect
            - value: '59'
              newvalue: aflane8023
            - value: '60'
              newvalue: aflane8025
            - value: '61'
              newvalue: cctEmul
            - value: '62'
              newvalue: fastEther
            - value: '63'
              newvalue: isdn
            - value: '64'
              newvalue: v11
            - value: '65'
              newvalue: v36
            - value: '66'
              newvalue: g703at64k
            - value: '67'
              newvalue: g703at2mb
            - value: '68'
              newvalue: qllc
            - value: '69'
              newvalue: fastEtherFX
            - value: '70'
              newvalue: channel
            - value: '71'
              newvalue: ieee80211
            - value: '72'
              newvalue: ibm370parChan
            - value: '73'
              newvalue: escon
            - value: '74'
              newvalue: dlsw
            - value: '75'
              newvalue: isdns
            - value: '76'
              newvalue: isdnu
            - value: '77'
              newvalue: lapd
            - value: '78'
              newvalue: ipSwitch
            - value: '79'
              newvalue: rsrb
            - value: '80'
              newvalue: atmLogical
            - value: '81'
              newvalue: ds0
            - value: '82'
              newvalue: ds0Bundle
            - value: '83'
              newvalue: bsc
            - value: '84'
              newvalue: async
            - value: '85'
              newvalue: cnr
            - value: '86'
              newvalue: iso88025Dtr
            - value: '87'
              newvalue: eplrs
            - value: '88'
              newvalue: arap
            - value: '89'
              newvalue: propCnls
            - value: '90'
              newvalue: hostPad
            - value: '91'
              newvalue: termPad
            - value: '92'
              newvalue: frameRelayMPI
            - value: '93'
              newvalue: x213
            - value: '94'
              newvalue: adsl
            - value: '95'
              newvalue: radsl
            - value: '96'
              newvalue: sdsl
            - value: '97'
              newvalue: vdsl
            - value: '98'
              newvalue: iso88025CRFPInt
            - value: '99'
              newvalue: myrinet
            - value: '100'
              newvalue: voiceEM
            - value: '101'
              newvalue: voiceFXO
            - value: '102'
              newvalue: voiceFXS
            - value: '103'
              newvalue: voiceEncap
            - value: '104'
              newvalue: voiceOverIp
            - value: '105'
              newvalue: atmDxi
            - value: '106'
              newvalue: atmFuni
            - value: '107'
              newvalue: atmIma
            - value: '108'
              newvalue: pppMultilinkBundle
            - value: '109'
              newvalue: ipOverCdlc
            - value: '110'
              newvalue: ipOverClaw
            - value: '111'
              newvalue: stackToStack
            - value: '112'
              newvalue: virtualIpAddress
            - value: '113'
              newvalue: mpc
            - value: '114'
              newvalue: ipOverAtm
            - value: '115'
              newvalue: iso88025Fiber
            - value: '116'
              newvalue: tdlc
            - value: '117'
              newvalue: gigabitEthernet
            - value: '118'
              newvalue: hdlc
            - value: '119'
              newvalue: lapf
            - value: '120'
              newvalue: v37
            - value: '121'
              newvalue: x25mlp
            - value: '122'
              newvalue: x25huntGroup
            - value: '123'
              newvalue: trasnpHdlc
            - value: '124'
              newvalue: interleave
            - value: '125'
              newvalue: fast
            - value: '126'
              newvalue: ip
            - value: '127'
              newvalue: docsCableMaclayer
            - value: '128'
              newvalue: docsCableDownstream
            - value: '129'
              newvalue: docsCableUpstream
            - value: '130'
              newvalue: a12MppSwitch
            - value: '131'
              newvalue: tunnel
            - value: '132'
              newvalue: coffee
            - value: '133'
              newvalue: ces
            - value: '134'
              newvalue: atmSubInterface
            - value: '135'
              newvalue: l2vlan
            - value: '136'
              newvalue: l3ipvlan
            - value: '137'
              newvalue: l3ipxvlan
            - value: '138'
              newvalue: digitalPowerline
            - value: '139'
              newvalue: mediaMailOverIp
            - value: '140'
              newvalue: dtm
            - value: '141'
              newvalue: dcn
            - value: '142'
              newvalue: ipForward
            - value: '143'
              newvalue: msdsl
            - value: '144'
              newvalue: ieee1394
            - value: '145'
              newvalue: if-gsn
            - value: '146'
              newvalue: dvbRccMacLayer
            - value: '147'
              newvalue: dvbRccDownstream
            - value: '148'
              newvalue: dvbRccUpstream
            - value: '149'
              newvalue: atmVirtual
            - value: '150'
              newvalue: mplsTunnel
            - value: '151'
              newvalue: srp
            - value: '152'
              newvalue: voiceOverAtm
            - value: '153'
              newvalue: voiceOverFrameRelay
            - value: '154'
              newvalue: idsl
            - value: '155'
              newvalue: compositeLink
            - value: '156'
              newvalue: ss7SigLink
            - value: '157'
              newvalue: propWirelessP2P
            - value: '158'
              newvalue: frForward
            - value: '159'
              newvalue: rfc1483
            - value: '160'
              newvalue: usb
            - value: '161'
              newvalue: ieee8023adLag
            - value: '162'
              newvalue: bgppolicyaccounting
            - value: '163'
              newvalue: frf16MfrBundle
            - value: '164'
              newvalue: h323Gatekeeper
            - value: '165'
              newvalue: h323Proxy
            - value: '166'
              newvalue: mpls
            - value: '167'
              newvalue: mfSigLink
            - value: '168'
              newvalue: hdsl2
            - value: '169'
              newvalue: shdsl
            - value: '170'
              newvalue: ds1FDL
            - value: '171'
              newvalue: pos
            - value: '172'
              newvalue: dvbAsiIn
            - value: '173'
              newvalue: dvbAsiOut
            - value: '174'
              newvalue: plc
            - value: '175'
              newvalue: nfas
            - value: '176'
              newvalue: tr008
            - value: '177'
              newvalue: gr303RDT
            - value: '178'
              newvalue: gr303IDT
            - value: '179'
              newvalue: isup
            - value: '180'
              newvalue: propDocsWirelessMaclayer
            - value: '181'
              newvalue: propDocsWirelessDownstream
            - value: '182'
              newvalue: propDocsWirelessUpstream
            - value: '183'
              newvalue: hiperlan2
            - value: '184'
              newvalue: propBWAp2Mp
            - value: '185'
              newvalue: sonetOverheadChannel
            - value: '186'
              newvalue: digitalWrapperOverheadChannel
            - value: '187'
              newvalue: aal2
            - value: '188'
              newvalue: radioMAC
            - value: '189'
              newvalue: atmRadio
            - value: '190'
              newvalue: imt
            - value: '191'
              newvalue: mvl
            - value: '192'
              newvalue: reachDSL
            - value: '193'
              newvalue: frDlciEndPt
            - value: '194'
              newvalue: atmVciEndPt
            - value: '195'
              newvalue: opticalChannel
            - value: '196'
              newvalue: opticalTransport
            - value: '197'
              newvalue: propAtm
            - value: '198'
              newvalue: voiceOverCable
            - value: '199'
              newvalue: infiniband
            - value: '200'
              newvalue: teLink
            - value: '201'
              newvalue: q2931
            - value: '202'
              newvalue: virtualTg
            - value: '203'
              newvalue: sipTg
            - value: '204'
              newvalue: sipSig
            - value: '205'
              newvalue: docsCableUpstreamChannel
            - value: '206'
              newvalue: econet
            - value: '207'
              newvalue: pon155
            - value: '208'
              newvalue: pon622
            - value: '209'
              newvalue: bridge
            - value: '210'
              newvalue: linegroup
            - value: '211'
              newvalue: voiceEMFGD
            - value: '212'
              newvalue: voiceFGDEANA
            - value: '213'
              newvalue: voiceDID
            - value: '214'
              newvalue: mpegTransport
            - value: '215'
              newvalue: sixToFour
            - value: '216'
              newvalue: gtp
            - value: '217'
              newvalue: pdnEtherLoop1
            - value: '218'
              newvalue: pdnEtherLoop2
            - value: '219'
              newvalue: opticalChannelGroup
            - value: '220'
              newvalue: homepna
            - value: '221'
              newvalue: gfp
            - value: '222'
              newvalue: ciscoISLvlan
            - value: '223'
              newvalue: actelisMetaLOOP
            - value: '224'
              newvalue: fcipLink
            - value: '225'
              newvalue: rpr
            - value: '226'
              newvalue: qam
            - value: '227'
              newvalue: lmp
            - value: '228'
              newvalue: cblVectaStar
            - value: '229'
              newvalue: docsCableMCmtsDownstream
            - value: '230'
              newvalue: adsl2
            - value: '231'
              newvalue: macSecControlledIF
            - value: '232'
              newvalue: macSecUncontrolledIF
            - value: '233'
              newvalue: aviciOpticalEther
            - value: '234'
              newvalue: atmbond
            - value: '235'
              newvalue: voiceFGDOS
            - value: '236'
              newvalue: mocaVersion1
            - value: '237'
              newvalue: ieee80216WMAN
            - value: '238'
              newvalue: adsl2plus
            - value: '239'
              newvalue: dvbRcsMacLayer
            - value: '240'
              newvalue: dvbTdm
            - value: '241'
              newvalue: dvbRcsTdma
            - value: '242'
              newvalue: x86Laps
            - value: '243'
              newvalue: wwanPP
            - value: '244'
              newvalue: wwanPP2
            - value: '245'
              newvalue: voiceEBS
            - value: '246'
              newvalue: ifPwType
            - value: '247'
              newvalue: ilan
            - value: '248'
              newvalue: pip
            - value: '249'
              newvalue: aluELP
            - value: '250'
              newvalue: gpon
            - value: '251'
              newvalue: vdsl2
            - value: '252'
              newvalue: capwapDot11Profile
            - value: '253'
              newvalue: capwapDot11Bss
            - value: '254'
              newvalue: capwapWtpVirtualRadio
            - value: '255'
              newvalue: bits
            - value: '256'
              newvalue: docsCableUpstreamRfPort
            - value: '257'
              newvalue: cableDownstreamRfPort
            - value: '258'
              newvalue: vmwareVirtualNic
            - value: '259'
              newvalue: ieee802154
            - value: '260'
              newvalue: otnOdu
            - value: '261'
              newvalue: otnOtu
            - value: '262'
              newvalue: ifVfiType
            - value: '263'
              newvalue: g9981
            - value: '264'
              newvalue: g9982
            - value: '265'
              newvalue: g9983
            - value: '266'
              newvalue: aluEpon
            - value: '267'
              newvalue: aluEponOnu
            - value: '268'
              newvalue: aluEponPhysicalUni
            - value: '269'
              newvalue: aluEponLogicalLink
            - value: '270'
              newvalue: aluGponOnu
            - value: '271'
              newvalue: aluGponPhysicalUni
            - value: '272'
              newvalue: vmwareNicTeam
            - value: '277'
              newvalue: docsOfdmDownstream
            - value: '278'
              newvalue: docsOfdmaUpstream
            - value: '279'
              newvalue: gfast
            - value: '280'
              newvalue: sdci
            - value: '281'
              newvalue: xboxWireless
            - value: '282'
              newvalue: fastdsl
            - value: '283'
              newvalue: docsCableScte55d1FwdOob
            - value: '284'
              newvalue: docsCableScte55d1RetOob
            - value: '285'
              newvalue: docsCableScte55d2DsOob
            - value: '286'
              newvalue: docsCableScte55d2UsOob
            - value: '287'
              newvalue: docsCableNdf
            - value: '288'
              newvalue: docsCableNdr
            - value: '289'
              newvalue: ptm
            - value: '290'
              newvalue: ghn
        - uuid: 0cb987b54d4243009aeae0454d0c059e
          name: 'Services status'
          mappings:
            - value: '0'
              newvalue: 'not running'
            - value: '2'
              newvalue: running
        - uuid: 1e5ba7a78b5843f0a97edc51eaa96778
          name: 'SNMPv2-TC::TruthValue'
          mappings:
            - value: '1'
              newvalue: 'true'
            - value: '2'
              newvalue: 'false'
        - uuid: 187ea1eb9cdb4f52bf5a6651820024a9
          name: zabbix.host.available
          mappings:
            - value: '0'
              newvalue: 'not available'
            - value: '1'
              newvalue: available
            - value: '2'
              newvalue: unknown
  graphs:
    - uuid: 45c34572c76f4128a3aa779a4ccda241
      name: 'OPNsense: Packet filter reason codes'
      type: STACKED
      ymin_type_1: FIXED
      graph_items:
        - color: 199C0D
          item:
            host: 'OPNsense by SNMP'
            key: opnsense.packets.match
        - sortorder: '1'
          color: F63100
          item:
            host: 'OPNsense by SNMP'
            key: opnsense.packets.bad.offset
        - sortorder: '2'
          color: 00611C
          item:
            host: 'OPNsense by SNMP'
            key: opnsense.packets.fragment
        - sortorder: '3'
          color: F7941D
          item:
            host: 'OPNsense by SNMP'
            key: opnsense.packets.short
        - sortorder: '4'
          color: FC6EA3
          item:
            host: 'OPNsense by SNMP'
            key: opnsense.packets.normalize
        - sortorder: '5'
          color: 6C59DC
          item:
            host: 'OPNsense by SNMP'
            key: opnsense.packets.mem.drop
