zabbix_export:
  version: '7.4'
  template_groups:
    - uuid: 36bff6c29af64692839d077febfc7079
      name: 'Templates/Network devices'
  templates:
    - uuid: 1818cd052f174772a48bfc275d0016dd
      template: 'Cisco Secure Firewall Threat Defense by HTTP'
      name: 'Cisco Secure Firewall Threat Defense by HTTP'
      description: |
        This template is designed to monitor Cisco Secure Firewall Threat Defense devices using the REST API.
        It provides metrics such as CPU and memory usage, interface statistics, connection tracking, and more.
        The template includes items, triggers, and graphs to help you monitor the performance and health of your Cisco Secure Firewall Threat Defense devices.
        It is based on the Cisco Secure Firewall Threat Defense REST API and requires the API URL, username, and password to be set as macros.
        
        You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/
        
        Generated by official Zabbix template tool "Templator"
      wizard_ready: 'YES'
      readme: |
        ## Overview
        
        This template provides monitoring capabilities for Cisco Secure Firewall Threat Defense devices using the REST API.
        It includes metrics for CPU and memory usage, interface statistics, connection tracking, and more.
        
        ## Setup
        
        Basic Auth is formed using the username and password of an administrator account that is used to log in to either FDM (Firepower Device Manager) or FMC (Firepower Management Center), depending on your deployment.
        
        Use the credentials in `API username` and `API password`.
        The `API URL` of the Cisco Secure Firewall Threat Defense REST API, e.g., `https://ftd.example.com/api/fdm/latest`.
      vendor:
        name: Zabbix
        version: 7.4-0
      groups:
        - name: 'Templates/Network devices'
      items:
        - uuid: 72082a30d426460e8d30219584bc8479
          name: 'CPU utilization'
          type: DEPENDENT
          key: cisco.ftd.cpu.utilization
          value_type: FLOAT
          units: '%'
          description: 'Average CPU utilization.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.cpu.items..avgUsage.first()
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: cpu
          triggers:
            - uuid: e54b01b249ea43978267ca1b053732e7
              expression: 'min(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.cpu.utilization,15m)>{$CISCO.FTD.CPU.UTIL.WARN}'
              name: 'Cisco Secure FTD: High CPU utilization'
              event_name: 'Cisco Secure FTD: High CPU utilization (over {$CISCO.FTD.CPU.UTIL.WARN}% for 15m)'
              opdata: 'Current utilization: {ITEM.LASTVALUE1}'
              priority: WARNING
              description: 'CPU utilization is too high. The system might be slow to respond.'
              tags:
                - tag: scope
                  value: capacity
                - tag: scope
                  value: performance
        - uuid: 6c8d958d050b42c68519b763dbbd2b4b
          name: 'Get device metrics'
          type: DEPENDENT
          key: cisco.ftd.device.metrics.get
          history: '0'
          value_type: TEXT
          description: 'Collects device metrics from the Cisco Secure FTD API.'
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var Cisco = {
                  	api_url: '{$CISCO.FTD.API.URL}',
                  	http_proxy: '{$CISCO.FTD.HTTP_PROXY}',
                  
                  	getToken: function (params) {
                  		['access_token'].forEach(function (field) {
                  			if (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {
                  				throw 'Unexpected session token value has been received: ' + field + '.';
                  			}
                  		});
                  		Cisco.params = params;
                  	},
                  
                  	request: function (url) {
                  
                  		var response,
                  			request = new HttpRequest();
                  
                  		if (typeof Cisco.http_proxy !== 'undefined' && Cisco.http_proxy !== '') {
                  			request.setProxy(Cisco.http_proxy);
                  		}
                  		if (!Cisco.params.access_token) {
                  			throw 'Request does not contain access token.';
                  		}
                  		request.addHeader('Accept: application/json');
                  		request.addHeader('Content-Type: application/json');
                  		request.addHeader('Authorization: Bearer ' + Cisco.params.access_token);
                  
                  		Zabbix.log(4, '[ Cisco ] request url: ' + url);
                  
                  		response = request.get(url);
                  
                  		if (request.getStatus() !== 200) {
                  			throw 'Request failed with status code ' + request.getStatus() + ': ' + response;
                  		}
                  
                  		try {
                  			return JSON.parse(response);
                  		}
                  		catch (error) {
                  			throw 'Failed to parse response received from API.';
                  		}
                  	},
                  
                  	getMetricsData: function () {
                  		var data = {};
                  
                  		endpoints = {
                  			'cpu': 'monitor/trendingreports/cpu?time_duration=60',
                  			'memory': 'monitor/trendingreports/memory?time_duration=60',
                  			'eps': 'monitor/trendingreports/eps?time_duration=60',
                  			'throughput': 'monitor/trendingreports/throughput?time_duration=60',
                  			'disk': 'operational/diskusage/default',
                  			'systeminfo': 'operational/systeminfo/default'
                  		};
                  
                  		if (typeof Cisco.api_url === 'string' && !Cisco.api_url.endsWith('/')) {
                  			Cisco.api_url += '/';
                  		}
                  
                  		Object.keys(endpoints).forEach(function (key) {
                  			data[key] = Cisco.request(Cisco.api_url + endpoints[key]);
                  		});
                  
                  		return data;
                  	}
                  };
                  
                  try {
                  	Cisco.getToken(JSON.parse(value));
                  
                  	return JSON.stringify(Cisco.getMetricsData());
                  }
                  catch (error) {
                  	error += (String(error).endsWith('.')) ? '' : '.';
                  	Zabbix.log(3, '[ Cisco ] ERROR: ' + error);
                  
                  	return JSON.stringify({ 'error': error });
                  }
          master_item:
            key: cisco.ftd.token.get
          tags:
            - tag: component
              value: raw
        - uuid: 201207d071834816bfc41f08c2cadff2
          name: 'Device metric item errors'
          type: DEPENDENT
          key: cisco.ftd.device.metrics.get.errors
          history: 1h
          value_type: TEXT
          description: 'Collects errors from device metrics.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.error
              error_handler: CUSTOM_VALUE
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: error
          triggers:
            - uuid: 64081e3e64264352a1075dcdc16d8b7a
              expression: 'length(last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.device.metrics.get.errors))>0'
              name: 'Cisco Secure FTD: There are errors in the ''Get device metrics'' metric'
              priority: WARNING
              description: 'An error occurred when trying to get device metrics from the Cisco Secure FTD API.'
              tags:
                - tag: scope
                  value: availability
        - uuid: 431375cc8501476d8fde2f5ad2e66b2f
          name: 'Disc space: Total'
          type: DEPENDENT
          key: cisco.ftd.disk.total.size
          units: B
          description: 'Total disk size in bytes.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.name == "disk_stats.total.size")].value.first()'
              error_handler: DISCARD_VALUE
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.operational.metrics.get
          tags:
            - tag: component
              value: disk
        - uuid: d5072e8701674e23a38c3feb4a66c844
          name: 'Disc space: Used'
          type: DEPENDENT
          key: cisco.ftd.disk.total.used
          units: B
          description: 'Total used disk space in bytes.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.name == "disk_stats.total.used")].value.first()'
              error_handler: DISCARD_VALUE
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.operational.metrics.get
          tags:
            - tag: component
              value: disk
        - uuid: cde9728d17f34719ba7751826c7cc93f
          name: 'Disc space: Utilization'
          type: DEPENDENT
          key: cisco.ftd.disk.total.utilization
          units: '%'
          description: 'Total disk space utilization percentage.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.name == "disk_stats.total.used_percentage")].value.first()'
              error_handler: DISCARD_VALUE
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.operational.metrics.get
          tags:
            - tag: component
              value: disk
        - uuid: ce9ae0fb00f94233950d400af207ceff
          name: 'Events per second'
          type: DEPENDENT
          key: cisco.ftd.events.rate
          value_type: FLOAT
          units: '!events'
          description: 'Average events per second.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.eps.items..avgEps.first()
            - type: CHANGE_PER_SECOND
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: system
        - uuid: a5e0330248284d24a8754e6c04539517
          name: 'Memory utilization'
          type: DEPENDENT
          key: cisco.ftd.memory.utilization
          value_type: FLOAT
          units: '%'
          description: 'Memory utilization percentage.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.memory.items..avgUsage.first()
              error_handler: DISCARD_VALUE
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: memory
          triggers:
            - uuid: 3d5da93aed4343dc8b7e20628a37d20a
              expression: 'min(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.memory.utilization,15m) >= {$CISCO.FTD.MEMORY.UTIL.WARN}'
              name: 'Cisco Secure FTD: High memory utilization'
              event_name: 'Cisco Secure FTD: High memory utilization (over {$CISCO.FTD.MEMORY.UTIL.WARN}% for 15m)'
              opdata: 'Current utilization: {ITEM.LASTVALUE1}'
              priority: AVERAGE
              description: 'RAM utilization is too high. The system might be slow to respond.'
              tags:
                - tag: scope
                  value: performance
        - uuid: ecc462ed67024602af0a8b026583a64d
          name: 'Platform model'
          type: DEPENDENT
          key: cisco.ftd.model
          value_type: CHAR
          description: 'Platform model of the Cisco Secure FTD.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.systeminfo.platformModel
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 12h
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: system
        - uuid: 5eae7fb2030e44bb8afa8b65c53c5d39
          name: 'Get operational metrics'
          type: DEPENDENT
          key: cisco.ftd.operational.metrics.get
          history: '0'
          value_type: TEXT
          description: 'Collects device metrics from the Cisco Secure FTD API.'
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var Cisco = {
                  	api_url: '{$CISCO.FTD.API.URL}',
                  	http_proxy: '{$CISCO.FTD.HTTP_PROXY}',
                  
                  	getToken: function (params) {
                  		['access_token'].forEach(function (field) {
                  			if (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {
                  				throw 'Unexpected session token value has been received: ' + field + '.';
                  			}
                  		});
                  		Cisco.params = params;
                  	},
                  
                  	getField: function (data, path, default_value) {
                  		var steps = path.split('.');
                  		var step = steps.shift();
                  
                  		while (typeof step !== 'undefined') {
                  			if (typeof data === undefined || typeof data[step] === 'undefined') {
                  				return default_value;
                  			}
                  
                  			data = data[step];
                  			step = steps.shift();
                  		}
                  		return data;
                  	},
                  
                  	request: function (url) {
                  
                  		var response,
                  			request = new HttpRequest();
                  
                  		if (typeof Cisco.http_proxy !== 'undefined' && Cisco.http_proxy !== '') {
                  			request.setProxy(Cisco.http_proxy);
                  		}
                  		if (!Cisco.params.access_token) {
                  			throw 'Request does not contain access token.';
                  		}
                  		request.addHeader('Accept: application/json');
                  		request.addHeader('Content-Type: application/json');
                  		request.addHeader('Authorization: Bearer ' + Cisco.params.access_token);
                  
                  		Zabbix.log(4, '[ Cisco ] request url: ' + url);
                  
                  		response = request.get(url);
                  
                  		if (request.getStatus() !== 200) {
                  			throw 'Request failed with status code ' + request.getStatus() + ': ' + response;
                  		}
                  
                  		try {
                  			return JSON.parse(response);
                  		}
                  		catch (error) {
                  			throw 'Failed to parse response received from API.';
                  		}
                  	},
                  
                  	getMetricsData: function () {
                  		if (typeof Cisco.api_url === 'string' && !Cisco.api_url.endsWith('/')) {
                  			Cisco.api_url += '/';
                  		}
                  
                  		metrics = Cisco.getField(Cisco.request(Cisco.api_url + 'devices/default/operational/metrics'), 'items');
                  
                  		return metrics.map(function (data) {
                  			const idField = Cisco.getField(data, 'id', '');
                  			const parts = idField.split('.');
                  
                  			const type = parts[0];
                  			const id = parts[1] || type;
                  			const metric = parts.length >= 3 ? parts.slice(2).join('.') : parts.slice(1).join('.');
                  
                  			return {
                  				type,
                  				id,
                  				metric,
                  				name: Cisco.getField(data, 'name', ''),
                  				value: Cisco.getField(data, 'metric.value', null),
                  				status: Cisco.getField(data, 'metric.status'),
                  				mounted_on: Cisco.getField(data, 'mountedOn'),
                  				unit: Cisco.getField(data, 'metric.unit', '')
                  			};
                  		});
                  
                  	}
                  };
                  
                  try {
                  	Cisco.getToken(JSON.parse(value));
                  
                  	return JSON.stringify(Cisco.getMetricsData());
                  }
                  catch (error) {
                  	error += (String(error).endsWith('.')) ? '' : '.';
                  	Zabbix.log(3, '[ Cisco ] ERROR: ' + error);
                  
                  	return JSON.stringify({ 'error': error });
                  }
          master_item:
            key: cisco.ftd.token.get
          tags:
            - tag: component
              value: raw
        - uuid: b2b4d9d4afad426483283cc9c23dcbc7
          name: 'Operational metric item errors'
          type: DEPENDENT
          key: cisco.ftd.operational.metrics.get.errors
          history: 1h
          value_type: TEXT
          description: 'Collects errors from operational metrics.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.error
              error_handler: CUSTOM_VALUE
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.operational.metrics.get
          tags:
            - tag: component
              value: error
          triggers:
            - uuid: d955d3cd1f5f4263ac37a004e047e5d5
              expression: 'length(last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.operational.metrics.get.errors))>0'
              name: 'Cisco Secure FTD: There are errors in the ''Get operational metrics'' metric'
              priority: WARNING
              description: 'An error occurred when trying to get operational metrics from the Cisco Secure FTD API.'
              tags:
                - tag: scope
                  value: availability
        - uuid: 0668f90812a94797a0b5194ffb2870d2
          name: 'Serial number'
          type: DEPENDENT
          key: cisco.ftd.serialnumber
          value_type: CHAR
          description: 'Serial number of the Cisco Secure FTD.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.systeminfo.serialNumber
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 24h
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: system
          triggers:
            - uuid: c8c683ef77a94e37a407b4879be29245
              expression: 'last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.serialnumber,#1)<>last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.serialnumber,#2) and length(last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.serialnumber))>0'
              name: 'Cisco Secure FTD: Device has been replaced'
              event_name: 'Cisco Secure FTD: Device has been replaced (new serial number received)'
              priority: INFO
              description: 'The device serial number has changed. Acknowledge to close the problem manually.'
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: notice
        - uuid: 11da0a11baff42e19cdb00e6f1ec46be
          name: 'Software version'
          type: DEPENDENT
          key: cisco.ftd.software.version
          value_type: CHAR
          description: 'Software version of the Cisco Secure FTD.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.systeminfo.softwareVersion
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 12h
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: system
        - uuid: 826ab729ee124cd8afcd0608803ee26e
          name: 'Storage: Free'
          type: DEPENDENT
          key: cisco.ftd.storage.free
          units: B
          description: 'Amount of free storage.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.disk.free
              error_handler: DISCARD_VALUE
            - type: MULTIPLIER
              parameters:
                - '1073741824'
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: storage
        - uuid: 51e1c93ed8084054b0a1c79666772329
          name: 'Storage: Total'
          type: DEPENDENT
          key: cisco.ftd.storage.total
          units: B
          description: 'Amount of total storage.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.disk.total
              error_handler: DISCARD_VALUE
            - type: MULTIPLIER
              parameters:
                - '1073741824'
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: storage
        - uuid: a3c13fa819db4776bbfc49e97331a128
          name: 'Storage: Used'
          type: DEPENDENT
          key: cisco.ftd.storage.usage
          units: B
          description: 'Amount of storage used.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.disk.used
              error_handler: DISCARD_VALUE
            - type: MULTIPLIER
              parameters:
                - '1073741824'
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: storage
        - uuid: fe265c79580b4da99b9a83f23739fae5
          name: 'Get token'
          type: HTTP_AGENT
          key: cisco.ftd.token.get
          history: '0'
          value_type: TEXT
          description: 'Requests an access token using the `password` grant type (username and password).'
          timeout: '{$CISCO.FTD.DATA.TIMEOUT}'
          url: '{$CISCO.FTD.API.URL}/fdm/token'
          posts: '{ "grant_type": "password", "username": "{$CISCO.FTD.API.USERNAME}", "password": "{$CISCO.FTD.API.PASSWORD}" }'
          http_proxy: '{$CISCO.FTD.HTTP_PROXY}'
          headers:
            - name: Content-Type
              value: application/json
            - name: Accept
              value: application/json
          request_method: POST
          tags:
            - tag: component
              value: raw
        - uuid: d03f7e217c704bbc934a6045cbbec48d
          name: 'System uptime'
          type: DEPENDENT
          key: cisco.ftd.uptime
          units: uptime
          description: 'The system uptime.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.systeminfo.systemUptime
            - type: JAVASCRIPT
              parameters:
                - 'return (Math.floor(Date.now()/1000)-Math.floor(Number(value)/1000));'
          master_item:
            key: cisco.ftd.device.metrics.get
          tags:
            - tag: component
              value: system
          triggers:
            - uuid: 887632676fba481db8dd93a977a8d256
              expression: 'last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.uptime)<10m'
              name: 'Cisco Secure FTD: Device has been restarted'
              event_name: 'Cisco Secure FTD: {HOST.NAME} has been restarted (uptime < 10m)'
              priority: INFO
              description: 'The host uptime is less than 10 minutes.'
              manual_close: 'YES'
              tags:
                - tag: scope
                  value: notice
      discovery_rules:
        - uuid: fd567f947ede4429a3006ef43e01ff40
          name: 'ASP drop discovery'
          type: DEPENDENT
          key: cisco.ftd.asp_drops.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.ASP.STATS.NAME.MATCHES}'
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.ASP.STATS.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of the Accelerated Security Path drops or connections from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 6aef1770da014d549373c0f045b9304f
              name: 'ASP [{#METRIC}]'
              type: DEPENDENT
              key: 'cisco.ftd.asp_drops["{#ID}"]'
              value_type: FLOAT
              description: 'Number of Accelerated Security Path (ASP) drops per second for `{#METRIC}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.id == "{#NAME}" && @.metric == "{#METRIC}")].value.first()'
                - type: CHANGE_PER_SECOND
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: asp
                  value: '{#ID}'
                - tag: component
                  value: asp
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	asp_drops = [];
                  
                  data.forEach(function (item) {
                  	if (item.type === 'asp_drops') {
                  		asp_drops.push({
                  			'{#ID}': item.metric.split(' ').join('_'),
                  			'{#NAME}': item.id,
                  			'{#METRIC}': item.metric
                  		});
                  	}
                  });
                  
                  return JSON.stringify(asp_drops);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 81b052482ea1408180540a96f9fea8b6
          name: 'Connection discovery'
          type: DEPENDENT
          key: cisco.ftd.conn_stats.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.CONN.STATS.NAME.MATCHES}'
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.CONN.STATS.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of connection statistics from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: e9c51430c12e40e9926d6ff2059ea295
              name: 'Statistic [{#NAME}][{#METRIC}]'
              type: DEPENDENT
              key: 'cisco.ftd.conn_stats["{#NAME}","{#METRIC}"]'
              value_type: FLOAT
              description: 'Connection statistic for `{#NAME}` and metric `{#METRIC}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.id == "{#NAME}" && @.metric == "{#METRIC}")].value.first()'
                  error_handler: DISCARD_VALUE
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: connection
                - tag: connection
                  value: '{#NAME}'
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	connections = [];
                  
                  data.forEach(function (connection) {
                  	if (connection.type === 'conn_stats') {
                  		connections.push({
                  			'{#NAME}': connection.id,
                  			'{#METRIC}': connection.metric
                  		});
                  	}
                  });
                  
                  return JSON.stringify(connections);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 0e73d72250294e959a6f0557631e64ba
          name: 'CPU discovery'
          type: DEPENDENT
          key: cisco.ftd.cpu.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#METRIC}'
                value: '{$CISCO.FTD.LLD.FILTER.CPU.NAME.MATCHES}'
              - macro: '{#METRIC}'
                value: '{$CISCO.FTD.LLD.FILTER.CPU.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of CPU monitoring entries from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 4a09b3b0c19148b99dd5fc3da975aa0e
              name: 'CPU [{#METRIC}] utilization'
              type: DEPENDENT
              key: 'cisco.ftd.cpu.util["{#NAME}"]'
              value_type: FLOAT
              units: '%'
              description: 'Discovery of CPU `{#METRIC}` utilization (in percent).'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.name == "{#NAME}")].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: cpu
                - tag: cpu
                  value: '{#METRIC}'
              trigger_prototypes:
                - uuid: 1c5f0b2d3e4f4a6b8c9d0e1f2a3b4c5d
                  expression: 'min(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.cpu.util["{#NAME}"],15m)>{$CISCO.FTD.CPU.UTIL.WARN:"{#NAME}"}'
                  name: 'Cisco Secure FTD: High CPU [{#METRIC}] utilization'
                  event_name: 'Cisco Secure FTD: High CPU utilization (over {$CISCO.FTD.CPU.UTIL.WARN:"{#NAME}"}% for 15m)'
                  opdata: 'Current utilization: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'CPU utilization is too high. The system might be slow to respond.'
                  tags:
                    - tag: scope
                      value: capacity
                    - tag: scope
                      value: performance
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	cpu = [];
                  
                  data.forEach(function (item) {
                  	if (item.type === 'cpu') {
                  		cpu.push({
                  			'{#NAME}': item.name,
                  			'{#METRIC}': item.metric
                  		});
                  	}
                  });
                  
                  return JSON.stringify(cpu);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 0b48d721f9b44f1b836cc889d53dacaf
          name: 'Critical process discovery'
          type: DEPENDENT
          key: cisco.ftd.critical_process.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#ID}'
                value: '{$CISCO.FTD.LLD.FILTER.PROCESS.NAME.MATCHES}'
              - macro: '{#ID}'
                value: '{$CISCO.FTD.LLD.FILTER.PROCESS.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of critical process statistics from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 9c36af7e5458489ea318e22bc58d1965
              name: 'Process [{#ID}]: Restart count'
              type: DEPENDENT
              key: 'cisco.ftd.critical_process.restart_count["{#ID}"]'
              description: 'Restart count of process `{#ID}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.id == "{#ID}" && @.metric == "restart_count")].value.first()'
                  error_handler: DISCARD_VALUE
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: process
                - tag: process
                  value: '{#ID}'
            - uuid: fc6e03e292b947fc9ec05de27c2a4d7f
              name: 'Process [{#ID}]: Status'
              type: DEPENDENT
              key: 'cisco.ftd.critical_process.status["{#ID}"]'
              description: 'Status of process `{#ID}`.'
              valuemap:
                name: 'Cisco FTD process status'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.id == "{#ID}" && @.metric == "status")].status.first()'
                  error_handler: DISCARD_VALUE
                - type: JAVASCRIPT
                  parameters:
                    - |
                      const idx = {
                      	'STOPPED': 1,
                      	'RUNNING': 2,
                      	'FAILED': 3,
                      	'UNKNOWN': 4,
                      	'RESTARTING': 5
                      };
                      
                      return typeof idx[value] === 'undefined' ? 0 : idx[value];
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: process
                - tag: process
                  value: '{#ID}'
              trigger_prototypes:
                - uuid: 9ef40026c8fe4dd389b43fa2e012ce0e
                  expression: 'last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.critical_process.status["{#ID}"])=3'
                  name: 'Cisco Secure FTD: Process [{#ID}]: Status failed'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: 'Process `{#ID}` is the `failed` status.'
                  tags:
                    - tag: scope
                      value: availability
                    - tag: scope
                      value: performance
                - uuid: 7737377bce104953b8e80c2700492c5d
                  expression: 'last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.critical_process.status["{#ID}"])=1'
                  name: 'Cisco Secure FTD: Process [{#ID}]: Status stopped'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: 'Process `{#ID}` is the `stopped` status.'
                  tags:
                    - tag: scope
                      value: availability
                    - tag: scope
                      value: performance
            - uuid: 4ae16d0410804ec48e5d1866db307a15
              name: 'Process [{#ID}]: Uptime'
              type: DEPENDENT
              key: 'cisco.ftd.critical_process.uptime["{#ID}"]'
              value_type: FLOAT
              units: uptime
              description: 'Uptime of process `{#ID}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.id == "{#ID}" && @.metric == "uptime")].value.first()'
                  error_handler: DISCARD_VALUE
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: process
                - tag: process
                  value: '{#ID}'
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	critical_process = [],
                  	unique = {};
                  
                  data.forEach(function (process) {
                  	var key = process.id;
                  	if (!unique[key] && process.type == 'critical_process') {
                  		unique[key] = true;
                  		critical_process.push({
                  			'{#ID}': process.id
                  		});
                  	}
                  });
                  
                  return JSON.stringify(critical_process);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: c49cb0da46624ed1b56063d8c2589e55
          name: 'FAN discovery'
          type: DEPENDENT
          key: cisco.ftd.fan.discovery
          description: 'Discovery of FAN sensors.'
          item_prototypes:
            - uuid: d05588f39d2d401595f27e6e8b293296
              name: 'Fan speed [{#NAME}]'
              type: DEPENDENT
              key: 'cisco.ftd.sensor.fan.rpm[{#SENSOR}]'
              value_type: FLOAT
              units: '!rpm'
              description: 'FAN `{#SENSOR}` speed in RPM.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == ''{#SENSOR}'')].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: fan
                - tag: fan
                  value: '{#NAME}'
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	fan = [];
                  
                  data.forEach(function (item) {
                  
                  	if (item.type === 'chassis_stats' && item.metric.match(/_fan/)) {
                  		fan.push({
                  			'{#SENSOR}': item.metric,
                  			'{#NAME}': item.metric.replace(/_rpm|_spd/g, '')
                  		});
                  	}
                  });
                  
                  return JSON.stringify(fan);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 38b66206cb044ef0bf4806b6155baf26
          name: 'Interface discovery'
          type: DEPENDENT
          key: cisco.ftd.interface.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#DESCR}'
                value: '{$CISCO.FTD.LLD.FILTER.IF.DESCR.MATCHES}'
              - macro: '{#DESCR}'
                value: '{$CISCO.FTD.LLD.FILTER.IF.DESCR.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.IF.NAME.MATCHES}'
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.IF.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of interfaces from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: c23c19d990ca4813abd843d03a63bf14
              name: 'Interface [{#NAME}][{#DESCR}]: Dropped packets'
              type: DEPENDENT
              key: 'cisco.ftd.interface.drop.packets["{#NAME}"]'
              value_type: FLOAT
              description: 'Number of dropped packets per second `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "drop_packets")].value.first()'
                  error_handler: DISCARD_VALUE
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
            - uuid: c89465c8fdc049cfa3358eaf3fc4542b
              name: 'Interface [{#NAME}][{#DESCR}]: Get metric data'
              type: DEPENDENT
              key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              history: '0'
              value_type: TEXT
              description: 'Gets data from the interface `{#NAME}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.id == "{#NAME}")]'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: network
                - tag: component
                  value: raw
                - tag: interface
                  value: '{#NAME}'
            - uuid: e22680cc81e248008c0cc22ee7dc79ba
              name: 'Interface [{#NAME}][{#DESCR}]: Input errors'
              type: DEPENDENT
              key: 'cisco.ftd.interface.input.errors["{#NAME}"]'
              value_type: FLOAT
              description: 'Input errors `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "input_errors")].value.first()'
                  error_handler: DISCARD_VALUE
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
              trigger_prototypes:
                - uuid: 7493917bc86741a9b9e5407d91a3c41b
                  expression: 'min(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.interface.input.errors["{#NAME}"],5m)>{$CISCO.FTD.IF.ERRORS.WARN:"{#IFNAME}"}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'max(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.interface.input.errors["{#NAME}"],5m)<{$CISCO.FTD.IF.ERRORS.WARN:"{#NAME}"}*0.8'
                  name: 'Cisco Secure FTD: Interface [{#NAME}][{#DESCR}]: High input error rate'
                  event_name: 'Cisco Secure FTD: Interface [{#NAME}][{#DESCR}]: High input error rate ( > {$CISCO.FTD.IF.ERRORS.WARN:"{#NAME}"} for 5m)'
                  opdata: 'Errors in: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'Recovers when below 80% of the `{$CISCO.FTD.IF.ERRORS.WARN:"{#NAME}"}` threshold.'
                  dependencies:
                    - name: 'Cisco Secure FTD: Interface [{#NAME}][{#DESCR}]: Link down'
                      expression: '{$CISCO.FTD.IF.CONTROL:"{#IFNAME}"}=1 and (last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.interface.status["{#NAME}"])=0)'
                  tags:
                    - tag: scope
                      value: availability
            - uuid: 8d153f59b49e4f17acce290543edb0c9
              name: 'Interface [{#NAME}][{#DESCR}]: Input packets'
              type: DEPENDENT
              key: 'cisco.ftd.interface.input.packets["{#NAME}"]'
              value_type: FLOAT
              description: 'Input packets `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "input_packets")].value.first()'
                  error_handler: DISCARD_VALUE
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
            - uuid: e13c67805d8f49b8a2f884dfee2065ce
              name: 'Interface [{#NAME}][{#DESCR}]: Outgoing traffic'
              type: DEPENDENT
              key: 'cisco.ftd.interface.out.traffic["{#NAME}"]'
              units: bps
              description: 'Outgoing traffic `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "output_bytes")].value.first()'
                  error_handler: DISCARD_VALUE
                - type: MULTIPLIER
                  parameters:
                    - '8'
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
            - uuid: 17687d65543e45dc92f058eed2ea5b33
              name: 'Interface [{#NAME}][{#DESCR}]: Output errors'
              type: DEPENDENT
              key: 'cisco.ftd.interface.output.errors["{#NAME}"]'
              value_type: FLOAT
              description: 'Output errors `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "output_errors")].value.first()'
                  error_handler: DISCARD_VALUE
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
              trigger_prototypes:
                - uuid: 58570e2bed7f47448e1c2d43e448cc78
                  expression: 'min(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.interface.output.errors["{#NAME}"],5m)>{$CISCO.FTD.IF.ERRORS.WARN:"{#IFNAME}"}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'max(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.interface.output.errors["{#NAME}"],5m)<{$CISCO.FTD.IF.ERRORS.WARN:"{#NAME}"}*0.8'
                  name: 'Cisco Secure FTD: Interface [{#NAME}][{#DESCR}]: High output error rate'
                  event_name: 'Cisco Secure FTD: Interface [{#NAME}][{#DESCR}]: High output error rate ( > {$CISCO.FTD.IF.ERRORS.WARN:"{#NAME}"} for 5m)'
                  opdata: 'Errors in: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'Recovers when below 80% of the `{$CISCO.FTD.IF.ERRORS.WARN:"{#NAME}"}` threshold.'
                  dependencies:
                    - name: 'Cisco Secure FTD: Interface [{#NAME}][{#DESCR}]: Link down'
                      expression: '{$CISCO.FTD.IF.CONTROL:"{#IFNAME}"}=1 and (last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.interface.status["{#NAME}"])=0)'
                  tags:
                    - tag: scope
                      value: availability
            - uuid: 2feeaafb8a9844b7b99c45cb5d8a0d6a
              name: 'Interface [{#NAME}][{#DESCR}]: Output packets'
              type: DEPENDENT
              key: 'cisco.ftd.interface.output.packets["{#NAME}"]'
              value_type: FLOAT
              description: 'Output packets `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "output_packets")].value.first()'
                  error_handler: DISCARD_VALUE
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
            - uuid: 4c1364b2ee22411a93e4c093842ac953
              name: 'Interface [{#NAME}][{#DESCR}]: Status'
              type: DEPENDENT
              key: 'cisco.ftd.interface.status["{#NAME}"]'
              value_type: FLOAT
              description: 'Status `{#NAME}` interface.'
              valuemap:
                name: 'Cisco FTD interface status'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "status")].value.first()'
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
              trigger_prototypes:
                - uuid: a7b1dd7b06654adaa9781efb2e5b5d42
                  expression: '{$CISCO.FTD.IF.CONTROL:"{#IFNAME}"}=1 and (last(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.interface.status["{#NAME}"])=0)'
                  name: 'Cisco Secure FTD: Interface [{#NAME}][{#DESCR}]: Link down'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: |
                    This trigger expression works as follows:
                    1. It can be triggered if the operations status is `down`.
                    2. `{$CISCO.FTD.IF.CONTROL:"{#IFNAME}"}=1` - a user can redefine the context macro to`0`, marking this interface as not important. No new trigger will be fired if this interface is down.
                  tags:
                    - tag: scope
                      value: availability
            - uuid: c1f73a16a8614122ae7e255ece2d7017
              name: 'Interface [{#NAME}][{#DESCR}]: Incoming traffic'
              type: DEPENDENT
              key: 'cisco.ftd.net.if.in.traffic["{#NAME}"]'
              units: bps
              description: 'Input traffic `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "input_bytes")].value.first()'
                - type: MULTIPLIER
                  parameters:
                    - '8'
                  error_handler: DISCARD_VALUE
                - type: CHANGE_PER_SECOND
              master_item:
                key: 'cisco.ftd.interface.get["{#NAME}","{#DESCR}"]'
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	interfaces = [],
                  	unique = {};
                  
                  	data.forEach(function (interface) {
                  		var key = interface.id;
                  		if (!unique[key] && interface.type == 'interface' ) {
                  			unique[key] = true;
                  			interfaces.push({
                  				'{#DESCR}': interface.name,
                  				'{#NAME}': interface.id
                  			});
                  		}
                  	});
                  
                  return JSON.stringify(interfaces);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 704ddca94289435cae1a3acc06703656
          name: 'Memory discovery'
          type: DEPENDENT
          key: cisco.ftd.memory.discovery
          description: 'Discovery of memory monitoring entries from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 7b6551dc19e94fafb0688d17d1dc74c2
              name: 'Memory [{#METRIC}]'
              type: DEPENDENT
              key: 'cisco.ftd.memory["{#NAME}"]'
              value_type: FLOAT
              units: B
              description: 'Amount of memory in bytes for `{#METRIC}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.name == "{#NAME}")].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: memory
                - tag: component
                  value: raw
                - tag: memory
                  value: '{#METRIC}'
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	mem_bytes = [],
                  	mem_percentage = [];
                  
                  data.forEach(function (item) {
                  	if (item.type === 'mem' && item.metric.match(/used_percentage/)) {
                  		mem_percentage.push({
                  			'{#NAME}': item.name,
                  			'{#METRIC}': item.metric.replace('used_percentage_', '')
                  		});
                  	}
                  	else if (item.type === 'mem' && !item.metric.match(/remaining_blocks/)) {
                  		mem_bytes.push({
                  			'{#NAME}': item.name,
                  			'{#METRIC}': item.metric
                  		});
                  	}
                  });
                  
                  return JSON.stringify({ mem_percentage, mem_bytes });
            - type: JSONPATH
              parameters:
                - $.mem_bytes
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 934c5e47cfca45c2a4b8584311fdf314
          name: 'Memory utilization discovery'
          type: DEPENDENT
          key: cisco.ftd.memory.util.discovery
          description: 'Discovery of utilization memory monitoring entries from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 2844d89f2c2a47f3b5506526cd3a0a17
              name: 'Memory [{#METRIC}] utilization'
              type: DEPENDENT
              key: 'cisco.ftd.memory.util["{#NAME}"]'
              value_type: FLOAT
              units: '%'
              description: 'Discovery of memory `{#METRIC}` utilization (in percent).'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.name == "{#NAME}")].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: memory
                - tag: component
                  value: raw
                - tag: memory
                  value: '{#METRIC}'
              trigger_prototypes:
                - uuid: 4891c9022137417996978480d3b8b58d
                  expression: 'min(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.memory.util["{#NAME}"],15m)>{$CISCO.FTD.MEMORY.UTIL.WARN:"{#NAME}"}'
                  name: 'Cisco Secure FTD: High memory utilization'
                  event_name: 'Cisco Secure FTD: High memory utilization (over {$CISCO.FTD.MEMORY.UTIL.WARN:"{#NAME}"}% for 15m)'
                  opdata: 'Current utilization: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'Memory utilization is too high. The system might be slow to respond.'
                  tags:
                    - tag: scope
                      value: capacity
                    - tag: scope
                      value: performance
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	mem_bytes = [],
                  	mem_percentage = [];
                  
                  data.forEach(function (item) {
                  	if (item.type === 'mem' && item.metric.match(/used_percentage/)) {
                  		mem_percentage.push({
                  			'{#NAME}': item.name,
                  			'{#METRIC}': item.metric.replace('used_percentage_', '')
                  		});
                  	}
                  	else if (item.type === 'mem' && !item.metric.match(/remaining_blocks/)) {
                  		mem_bytes.push({
                  			'{#NAME}': item.name,
                  			'{#METRIC}': item.metric
                  		});
                  	}
                  });
                  
                  return JSON.stringify({ mem_percentage, mem_bytes });
            - type: JSONPATH
              parameters:
                - $.mem_percentage
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 57ac09be2b3d46b7a06a2899365c4010
          name: 'PSU discovery'
          type: DEPENDENT
          key: cisco.ftd.psu.discovery
          description: 'Discovery of PSU sensors.'
          item_prototypes:
            - uuid: 8947273145fb4f40ae76f6c04841150f
              name: 'Power supply [{#SENSOR}]'
              type: DEPENDENT
              key: 'cisco.ftd.sensor.psu.pwr[{#SENSOR}]'
              value_type: FLOAT
              units: '!W'
              description: 'Power supply unit `{#SENSOR}` power consumption in watts.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == ''{#SENSOR}'')].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: power
                - tag: psu
                  value: '{#SENSOR}'
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	pwr = [];
                  
                  data.forEach(function (item) {
                  
                  	if (item.type === 'chassis_stats' && item.metric.match(/_pwr/)) {
                  		pwr.push({
                  			'{#SENSOR}': item.metric
                  		});
                  	}
                  });
                  
                  return JSON.stringify(pwr);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: e49aabe5e2ad41fbaeeee607e604f0af
          name: 'Snort discovery'
          type: DEPENDENT
          key: cisco.ftd.snort.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.SNORT.ID.MATCHES}'
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.SNORT.ID.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of Snort and IDS/IPS statistics from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 402bb608adbd44aea706eaba9c849db5
              name: 'Statistic [{#NAME}][{#METRIC}]'
              type: DEPENDENT
              key: 'cisco.ftd.snort["{#ID}"]'
              value_type: FLOAT
              description: 'Discovery of Snort `{#NAME}` statistics of `{#METRIC}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.name == "{#ID}")].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: snort
                - tag: snort
                  value: '{#NAME}'
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	snort = [],
                  	unique = {};
                  
                  data.forEach(function (item) {
                  	var key = item.name;
                  	if (!unique[key] && item.type == 'snort') {
                  		unique[key] = true;
                  		snort.push({
                  			'{#METRIC}': item.metric,
                  			'{#NAME}': item.id,
                  			'{#ID}': item.name
                  
                  		});
                  	}
                  });
                  
                  return JSON.stringify(snort);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 0d88d0b278b34015ad7de49a3344309d
          name: 'Temperature sensor discovery'
          type: DEPENDENT
          key: cisco.ftd.temp.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#SENSOR}'
                value: '{$CISCO.FTD.LLD.FILTER.SENSOR.NAME.MATCHES}'
              - macro: '{#SENSOR}'
                value: '{$CISCO.FTD.LLD.FILTER.SENSOR.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of temperature sensors from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 3eb667ad9bf64ecc8b919017c158a1cd
              name: 'Temperature [{#SENSOR}]'
              type: DEPENDENT
              key: 'cisco.ftd.sensor.temp.value["{#SENSOR}"]'
              value_type: FLOAT
              units: °C
              description: 'Temperature of sensor `{#SENSOR}`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.metric == "{#SENSOR}")].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: temperature
                - tag: sensor
                  value: '{#SENSOR}'
              trigger_prototypes:
                - uuid: bc9906f695ca493ea09cdf6b3934384e
                  expression: 'avg(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.sensor.temp.value["{#SENSOR}"],5m)>{$CISCO.FTD.TEMP.CRIT:"{#SENSOR}"}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'max(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.sensor.temp.value["{#SENSOR}"],5m)<{$CISCO.FTD.TEMP.CRIT:"{#SENSOR}"}-3'
                  name: 'Cisco Secure FTD: Temperature is above critical threshold'
                  event_name: 'Cisco Secure FTD: Temperature is above critical threshold: >{$CISCO.FTD.TEMP.CRIT:"{#SENSOR}"}'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: 'This trigger uses temperature sensor values as well as the temperature sensor status, if available.'
                  tags:
                    - tag: scope
                      value: availability
                    - tag: scope
                      value: performance
                - uuid: 1505adc302134e21bb6d2ebf881e27c4
                  expression: 'avg(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.sensor.temp.value["{#SENSOR}"],5m)>{$CISCO.FTD.TEMP.WARN:"{#SENSOR}"}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'max(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.sensor.temp.value["{#SENSOR}"],5m)<{$CISCO.FTD.TEMP.WARN:"{#SENSOR}"}-3'
                  name: 'Cisco Secure FTD: Temperature is above warning threshold'
                  event_name: 'Cisco Secure FTD: Temperature is above warning threshold: >{$CISCO.FTD.TEMP.WARN:"{#SENSOR}"}'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'This trigger uses temperature sensor values as well as the temperature sensor status, if available.'
                  dependencies:
                    - name: 'Cisco Secure FTD: Temperature is above critical threshold'
                      expression: 'avg(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.sensor.temp.value["{#SENSOR}"],5m)>{$CISCO.FTD.TEMP.CRIT:"{#SENSOR}"}'
                      recovery_expression: 'max(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.sensor.temp.value["{#SENSOR}"],5m)<{$CISCO.FTD.TEMP.CRIT:"{#SENSOR}"}-3'
                  tags:
                    - tag: scope
                      value: availability
                    - tag: scope
                      value: performance
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	temp = [];
                  
                  data.forEach(function (item) {
                  
                  	if (item.type === 'chassis_stats' && item.metric.match(/_temp/)) {
                  		temp.push({
                  			'{#SENSOR}': item.metric
                  		});
                  	}
                  });
                  
                  return JSON.stringify(temp);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: c431c01781854d67996b70eaf85ff00a
          name: 'Throughput discovery'
          type: DEPENDENT
          key: cisco.ftd.throughput.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.THROUGHPUT.INTERFACE.NAME.MATCHES}'
              - macro: '{#NAME}'
                value: '{$CISCO.FTD.LLD.FILTER.THROUGHPUT.INTERFACE.NAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of throughput interfaces from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: a3ff16bc8dd74055bfcd75144a8f97cd
              name: 'Interface [{#NAME}]: Throughput'
              type: DEPENDENT
              key: 'cisco.ftd.interface.throughput["{#NAME}"]'
              value_type: FLOAT
              units: Bps
              description: 'Throughput of the `{#NAME}` interface.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.throughput.items[?(@.interfaceName == "{#NAME}")].interfaceThroughput.first()'
                  error_handler: DISCARD_VALUE
                - type: MULTIPLIER
                  parameters:
                    - '8'
              master_item:
                key: cisco.ftd.device.metrics.get
              tags:
                - tag: component
                  value: network
                - tag: interface
                  value: '{#NAME}'
          master_item:
            key: cisco.ftd.device.metrics.get
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.throughput.items
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	throughput = [],
                  	unique = {};
                  
                  data.forEach(function (item) {
                  	var key = item.interfaceName;
                  	if (!unique[key]) {
                  		unique[key] = true;
                  		throughput.push({
                  			'{#NAME}': item.interfaceName,
                  		});
                  	}
                  });
                  
                  return JSON.stringify(throughput);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
        - uuid: 31d08ae044b3473e860911142ba048ac
          name: 'Mounted filesystem discovery'
          type: DEPENDENT
          key: cisco.ftd.vfs.fs.discovery
          filter:
            evaltype: AND
            conditions:
              - macro: '{#FSMOUNT}'
                value: '{$CISCO.FTD.LLD.FILTER.FSMOUNT.MATCHES}'
              - macro: '{#FSMOUNT}'
                value: '{$CISCO.FTD.LLD.FILTER.FSMOUNT.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
              - macro: '{#FSNAME}'
                value: '{$CISCO.FTD.LLD.FILTER.FSNAME.MATCHES}'
              - macro: '{#FSNAME}'
                value: '{$CISCO.FTD.LLD.FILTER.FSNAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
          description: 'Discovery of mounted filesystems from the Cisco Secure FTD API.'
          item_prototypes:
            - uuid: 89ccc9c43d084d5d84cac0118a0e205b
              name: 'FS [{#FSNAME}][{#FSMOUNT}]: Space utilization'
              type: DEPENDENT
              key: 'cisco.ftd.fs.pused["{#FSNAME}","{#FSMOUNT}"]'
              value_type: FLOAT
              units: '%'
              description: 'Calculated as the percentage of the currently used space compared to the maximum available space.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.name == "{#NAME}" && @.mounted_on == "{#FSMOUNT}")].value.first()'
              master_item:
                key: cisco.ftd.operational.metrics.get
              tags:
                - tag: component
                  value: storage
                - tag: filesystem
                  value: '{#FSNAME}'
              trigger_prototypes:
                - uuid: 687ebffa0c14403398cde19620cc6627
                  expression: 'min(/Cisco Secure Firewall Threat Defense by HTTP/cisco.ftd.fs.pused["{#FSNAME}","{#FSMOUNT}"],15m)>{$CISCO.FTD.FS.PUSED.WARN:"{#FSNAME}"}'
                  name: 'Cisco Secure FTD: FS [{#FSNAME}][{#FSMOUNT}]: Space is low'
                  event_name: 'Cisco Secure FTD: FS [{#FSNAME}][{#FSMOUNT}]: Space is low (utilization is over {$CISCO.FTD.FS.PUSED.WARN:"{#FSNAME}"}% for 15m)'
                  opdata: 'Current utilization: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'The trigger expression is based on the current used and maximum available space. The system might be slow to respond.'
                  tags:
                    - tag: scope
                      value: capacity
                    - tag: scope
                      value: performance
          master_item:
            key: cisco.ftd.operational.metrics.get
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value),
                  	disk_percentage = [];
                  
                  data.forEach(function (item) {
                  
                  	if (item.type === 'disk_stats' && item.metric.match(/used_percentage/) && item.mounted_on !== undefined) {
                  		disk_percentage.push({
                  			'{#NAME}': item.name,
                  			'{#FSNAME}': item.id.replace('_', ''),
                  			'{#FSMOUNT}': item.mounted_on,
                  		});
                  	}
                  });
                  
                  return JSON.stringify(disk_percentage);
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 3h
      tags:
        - tag: class
          value: network
        - tag: subclass
          value: security
        - tag: target
          value: cisco
        - tag: target
          value: cisco-ftd
      macros:
        - macro: '{$CISCO.FTD.API.PASSWORD}'
          type: SECRET_TEXT
          description: 'Cisco Secure Firewall Threat Defense REST API password.'
          config:
            type: TEXT
            priority: '4'
            label: 'API password'
            description: 'Password for the Cisco Secure Firewall Threat Defense REST API.'
            required: 'YES'
        - macro: '{$CISCO.FTD.API.URL}'
          description: 'Cisco Secure Firewall Threat Defense REST API URL. Format example: `https://ftd.example.com/api/fdm/latest`'
          config:
            type: TEXT
            priority: '2'
            label: 'API URL'
            description: 'Cisco Secure Firewall Threat Defense REST API URL. Format example: `https://ftd.example.com/api/fdm/latest`'
            required: 'YES'
        - macro: '{$CISCO.FTD.API.USERNAME}'
          description: 'Cisco Secure Firewall Threat Defense REST API username.'
          config:
            type: TEXT
            priority: '3'
            label: 'API username'
            description: 'Cisco Secure Firewall Threat Defense REST API username.'
            required: 'YES'
        - macro: '{$CISCO.FTD.CPU.UTIL.WARN}'
          value: '80'
          description: 'Warning threshold for FTD CPU utilization, expressed as a percentage.'
          config:
            type: TEXT
            priority: '7'
            section_name: Thresholds
            label: 'CPU utilization warning threshold'
            description: 'Warning threshold for CPU utilization (%).'
        - macro: '{$CISCO.FTD.DATA.INTERVAL}'
          value: 1m
          description: 'Update interval for the HTTP item that retrieves data from the API. Can be used with context if needed (check the context values in relevant items).'
          config:
            type: TEXT
            priority: '6'
            label: 'API interval'
            description: 'Update interval for HTTP item (e.g., 1m).'
        - macro: '{$CISCO.FTD.DATA.TIMEOUT}'
          value: 15s
          description: 'Response timeout for the Cisco Secure Firewall Threat Defense REST API.'
          config:
            type: TEXT
            priority: '5'
            label: 'API timeout'
            description: 'Response timeout for the API (e.g., 15s).'
        - macro: '{$CISCO.FTD.FS.PUSED.WARN}'
          value: '80'
          description: 'Threshold for the filesystem utilization trigger. Can be used with the filesystem name as context.'
          config:
            type: TEXT
            priority: '33'
            section_name: Thresholds
            label: 'Filesystem utilization warning threshold'
            description: 'Warning threshold for filesystem utilization (%).'
        - macro: '{$CISCO.FTD.HTTP_PROXY}'
          description: 'Sets HTTP proxy value. If this macro is empty then no proxy is used.'
          config:
            type: TEXT
            priority: '1'
            label: 'HTTP proxy'
            description: 'HTTP proxy to use for requests.'
        - macro: '{$CISCO.FTD.IF.CONTROL}'
          value: '1'
          description: 'Macro for the operational state of the interface for the "link down" trigger. Can be used with the interface name as context.'
          config:
            type: TEXT
            priority: '35'
            section_name: Thresholds
            label: 'Interface control macro'
            description: 'Macro for interface operational state (1=important, 0=not important).'
        - macro: '{$CISCO.FTD.IF.ERRORS.WARN}'
          value: '2'
          description: 'Threshold for the error packet rate warning trigger. Can be used with the interface name as context.'
          config:
            type: TEXT
            priority: '34'
            section_name: Thresholds
            label: 'Interface error warning threshold'
            description: 'Warning threshold for interface error rate.'
        - macro: '{$CISCO.FTD.LLD.FILTER.ASP.STATS.NAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable Accelerated Security Path dropped packets or connections by name.'
          config:
            type: TEXT
            priority: '17'
            section_name: 'Discovery filters'
            label: 'ASP stats name matches'
            description: 'Regex to match ASP stats.'
        - macro: '{$CISCO.FTD.LLD.FILTER.ASP.STATS.NAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered Accelerated Security Path dropped packets or connections by name.'
          config:
            type: TEXT
            priority: '18'
            section_name: 'Discovery filters'
            label: 'ASP stats name not matches'
            description: 'Regex to exclude ASP stats.'
        - macro: '{$CISCO.FTD.LLD.FILTER.CONN.STATS.NAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable connections by name.'
          config:
            type: TEXT
            priority: '15'
            section_name: 'Discovery filters'
            label: 'Connection stats name matches'
            description: 'Regex to match discoverable connections.'
        - macro: '{$CISCO.FTD.LLD.FILTER.CONN.STATS.NAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered connections by name.'
          config:
            type: TEXT
            priority: '16'
            section_name: 'Discovery filters'
            label: 'Connection stats name not matches'
            description: 'Regex to exclude connections.'
        - macro: '{$CISCO.FTD.LLD.FILTER.CPU.NAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable CPUs by name.'
          config:
            type: TEXT
            priority: '21'
            section_name: 'Discovery filters'
            label: 'CPU name matches'
            description: 'Regex to match CPU names.'
        - macro: '{$CISCO.FTD.LLD.FILTER.CPU.NAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered CPUs by name.'
          config:
            type: TEXT
            priority: '22'
            section_name: 'Discovery filters'
            label: 'CPU name not matches'
            description: 'Regex to exclude CPU names.'
        - macro: '{$CISCO.FTD.LLD.FILTER.FSMOUNT.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable filesystems by mount point.'
          config:
            type: TEXT
            priority: '29'
            section_name: 'Discovery filters'
            label: 'Filesystem mount matches'
            description: 'Regex to match filesystem mount points.'
        - macro: '{$CISCO.FTD.LLD.FILTER.FSMOUNT.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered filesystems by mount point.'
          config:
            type: TEXT
            priority: '30'
            section_name: 'Discovery filters'
            label: 'Filesystem mount not matches'
            description: 'Regex to exclude filesystem mount points.'
        - macro: '{$CISCO.FTD.LLD.FILTER.FSNAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable filesystems by name.'
          config:
            type: TEXT
            priority: '27'
            section_name: 'Discovery filters'
            label: 'Filesystem name matches'
            description: 'Regex to match filesystems.'
        - macro: '{$CISCO.FTD.LLD.FILTER.FSNAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered filesystems by name.'
          config:
            type: TEXT
            priority: '28'
            section_name: 'Discovery filters'
            label: 'Filesystem name not matches'
            description: 'Regex to exclude filesystems.'
        - macro: '{$CISCO.FTD.LLD.FILTER.IF.DESCR.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable interface descriptions.'
          config:
            type: TEXT
            priority: '13'
            section_name: 'Discovery filters'
            label: 'Interface description matches'
            description: 'Regex to match interface descriptions.'
        - macro: '{$CISCO.FTD.LLD.FILTER.IF.DESCR.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered interfaces by description.'
          config:
            type: TEXT
            priority: '14'
            section_name: 'Discovery filters'
            label: 'Interface description not matches'
            description: 'Regex to exclude interface descriptions.'
        - macro: '{$CISCO.FTD.LLD.FILTER.IF.NAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable interface names.'
          config:
            type: TEXT
            priority: '11'
            section_name: 'Discovery filters'
            label: 'Interface name matches'
            description: 'Regex to match discoverable interfaces.'
        - macro: '{$CISCO.FTD.LLD.FILTER.IF.NAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered interfaces by name.'
          config:
            type: TEXT
            priority: '12'
            section_name: 'Discovery filters'
            label: 'Interface name not matches'
            description: 'Regex to exclude interfaces.'
        - macro: '{$CISCO.FTD.LLD.FILTER.PROCESS.NAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable processes by name.'
          config:
            type: TEXT
            priority: '23'
            section_name: 'Discovery filters'
            label: 'Process name matches'
            description: 'Regex to match process names.'
        - macro: '{$CISCO.FTD.LLD.FILTER.PROCESS.NAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered processes by name.'
          config:
            type: TEXT
            priority: '24'
            section_name: 'Discovery filters'
            label: 'Process name not matches'
            description: 'Regex to exclude process names.'
        - macro: '{$CISCO.FTD.LLD.FILTER.SENSOR.NAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable temperature sensors by name.'
          config:
            type: TEXT
            priority: '25'
            section_name: 'Discovery filters'
            label: 'Sensor name matches'
            description: 'Regex to match temperature sensors.'
        - macro: '{$CISCO.FTD.LLD.FILTER.SENSOR.NAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered temperature sensors by name.'
          config:
            type: TEXT
            priority: '26'
            section_name: 'Discovery filters'
            label: 'Sensor name not matches'
            description: 'Regex to exclude temperature sensors.'
        - macro: '{$CISCO.FTD.LLD.FILTER.SNORT.ID.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable Snort and IDS/IPS statistics by name.'
          config:
            type: TEXT
            priority: '19'
            section_name: 'Discovery filters'
            label: 'Snort ID matches'
            description: 'Regex to match Snort/IDS/IPS stats.'
        - macro: '{$CISCO.FTD.LLD.FILTER.SNORT.ID.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discovered Snort and IDS/IPS statistics by name.'
          config:
            type: TEXT
            priority: '20'
            section_name: 'Discovery filters'
            label: 'Snort ID not matches'
            description: 'Regex to exclude Snort/IDS/IPS stats.'
        - macro: '{$CISCO.FTD.LLD.FILTER.THROUGHPUT.INTERFACE.NAME.MATCHES}'
          value: '.*'
          description: 'Filter for discoverable throughput interfaces by name.'
          config:
            type: TEXT
            priority: '9'
            section_name: 'Discovery filters'
            label: 'Throughput interface name matches'
            description: 'Regex to match discoverable throughput interfaces.'
        - macro: '{$CISCO.FTD.LLD.FILTER.THROUGHPUT.INTERFACE.NAME.NOT_MATCHES}'
          value: CHANGE_IF_NEEDED
          description: 'Filter to exclude discoverable throughput interfaces by name.'
          config:
            type: TEXT
            priority: '10'
            section_name: 'Discovery filters'
            label: 'Throughput interface name not matches'
            description: 'Regex to exclude throughput interfaces.'
        - macro: '{$CISCO.FTD.MEMORY.UTIL.WARN}'
          value: '80'
          description: 'Warning threshold for FTD memory utilization, expressed as a percentage.'
          config:
            type: TEXT
            priority: '8'
            section_name: Thresholds
            label: 'Memory utilization warning threshold'
            description: 'Warning threshold for memory utilization (%).'
        - macro: '{$CISCO.FTD.TEMP.CRIT}'
          value: '60'
          description: 'Critical threshold for the temperature sensor trigger. Can be used with the interface name as context.'
          config:
            type: TEXT
            priority: '31'
            section_name: Thresholds
            label: 'Temperature critical threshold'
            description: 'Critical threshold for temperature sensors.'
        - macro: '{$CISCO.FTD.TEMP.WARN}'
          value: '50'
          description: 'Warning threshold for the temperature sensor trigger. Can be used with the interface name as context.'
          config:
            type: TEXT
            priority: '32'
            section_name: Thresholds
            label: 'Temperature warning threshold'
            description: 'Warning threshold for temperature sensors.'
      dashboards:
        - uuid: 2433c7593dee4824b3f5ce1209bc5311
          name: 'Cisco Secure FTD: General'
          pages:
            - name: Overview
              widgets:
                - type: item
                  width: '24'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.model
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: value_size
                      value: '20'
                - type: svggraph
                  name: Throughput
                  'y': '3'
                  width: '72'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 1565C0
                    - type: STRING
                      name: ds.0.items.0
                      value: '*Throughput'
                    - type: STRING
                      name: reference
                      value: RNVBR
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: Events
                  'y': '8'
                  width: '18'
                  height: '6'
                  fields:
                    - type: STRING
                      name: ds.0.color.0
                      value: 1565C0
                    - type: INTEGER
                      name: ds.0.dataset_type
                      value: '0'
                    - type: ITEM
                      name: ds.0.itemids.0
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.events.rate
                    - type: INTEGER
                      name: lefty
                      value: '0'
                    - type: STRING
                      name: reference
                      value: IMFOK
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: gauge
                  name: 'CPU usage'
                  x: '18'
                  'y': '8'
                  width: '19'
                  height: '6'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.cpu.utilization
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                    - type: INTEGER
                      name: show.2
                      value: '5'
                    - type: STRING
                      name: thresholds.0.color
                      value: 2196F3
                    - type: STRING
                      name: thresholds.0.threshold
                      value: '0'
                    - type: STRING
                      name: thresholds.1.color
                      value: FF8000
                    - type: STRING
                      name: thresholds.1.threshold
                      value: '60'
                    - type: STRING
                      name: thresholds.2.color
                      value: FF465C
                    - type: STRING
                      name: thresholds.2.threshold
                      value: '80'
                    - type: INTEGER
                      name: th_arc_size
                      value: '20'
                    - type: INTEGER
                      name: th_show_arc
                      value: '1'
                    - type: INTEGER
                      name: units_bold
                      value: '1'
                    - type: INTEGER
                      name: units_size
                      value: '20'
                    - type: INTEGER
                      name: value_bold
                      value: '1'
                    - type: INTEGER
                      name: value_size
                      value: '20'
                - type: item
                  x: '24'
                  width: '24'
                  height: '3'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.software.version
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: value_size
                      value: '20'
                - type: gauge
                  name: 'Memory usage'
                  x: '37'
                  'y': '8'
                  width: '18'
                  height: '6'
                  fields:
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.memory.utilization
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                    - type: INTEGER
                      name: show.2
                      value: '5'
                    - type: STRING
                      name: thresholds.0.color
                      value: 9CCC65
                    - type: STRING
                      name: thresholds.0.threshold
                      value: '0'
                    - type: STRING
                      name: thresholds.1.color
                      value: FF8000
                    - type: STRING
                      name: thresholds.1.threshold
                      value: '60'
                    - type: STRING
                      name: thresholds.2.color
                      value: FF465C
                    - type: STRING
                      name: thresholds.2.threshold
                      value: '80'
                    - type: INTEGER
                      name: th_arc_size
                      value: '20'
                    - type: INTEGER
                      name: th_show_arc
                      value: '1'
                    - type: INTEGER
                      name: units_bold
                      value: '1'
                    - type: INTEGER
                      name: units_size
                      value: '20'
                    - type: INTEGER
                      name: value_bold
                      value: '1'
                    - type: INTEGER
                      name: value_size
                      value: '20'
                - type: item
                  x: '48'
                  width: '24'
                  height: '3'
                  fields:
                    - type: INTEGER
                      name: decimal_places
                      value: '0'
                    - type: ITEM
                      name: itemid.0
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.uptime
                    - type: INTEGER
                      name: show.0
                      value: '2'
                    - type: INTEGER
                      name: value_size
                      value: '20'
                - type: piechart
                  name: 'Disk Usage'
                  x: '55'
                  'y': '8'
                  width: '17'
                  height: '6'
                  fields:
                    - type: INTEGER
                      name: decimal_places
                      value: '0'
                    - type: INTEGER
                      name: draw_type
                      value: '1'
                    - type: STRING
                      name: ds.0.color.0
                      value: 7CB342
                    - type: STRING
                      name: ds.0.color.1
                      value: 1E88E5
                    - type: INTEGER
                      name: ds.0.dataset_type
                      value: '0'
                    - type: STRING
                      name: ds.0.data_set_label
                      value: Total
                    - type: ITEM
                      name: ds.0.itemids.0
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.storage.free
                    - type: ITEM
                      name: ds.0.itemids.1
                      value:
                        host: 'Cisco Secure Firewall Threat Defense by HTTP'
                        key: cisco.ftd.storage.usage
                    - type: INTEGER
                      name: ds.0.type.0
                      value: '0'
                    - type: INTEGER
                      name: ds.0.type.1
                      value: '0'
                    - type: INTEGER
                      name: legend_lines
                      value: '2'
                    - type: INTEGER
                      name: legend_lines_mode
                      value: '1'
                    - type: INTEGER
                      name: legend_value
                      value: '1'
                    - type: INTEGER
                      name: space
                      value: '2'
                    - type: INTEGER
                      name: stroke
                      value: '1'
                    - type: INTEGER
                      name: total_show
                      value: '1'
                    - type: STRING
                      name: units
                      value: B
                    - type: INTEGER
                      name: units_show
                      value: '1'
                    - type: STRING
                      name: value_color
                      value: 607D8B
            - name: 'System Performance'
              widgets:
                - type: svggraph
                  name: 'CPU utilization per core'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 5E35B1
                    - type: STRING
                      name: ds.0.items.0
                      value: 'CPU [cpu*] utilization'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: INTEGER
                      name: legend_lines
                      value: '4'
                    - type: STRING
                      name: reference
                      value: IKAPW
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'CPU utilization Lina'
                  'y': '5'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: '795548'
                    - type: STRING
                      name: ds.0.items.0
                      value: 'CPU [lina*] utilization'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: STRING
                      name: reference
                      value: PRPGG
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'CPU utilization Snort'
                  'y': '10'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 78909C
                    - type: STRING
                      name: ds.0.items.0
                      value: 'CPU [snort*] utilization'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: STRING
                      name: reference
                      value: NDYCL
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Space usage, in %'
                  'y': '15'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 455A64
                    - type: STRING
                      name: ds.0.items.0
                      value: 'FS [dev*][*]: Space used, in %'
                    - type: STRING
                      name: reference
                      value: WZKDT
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Memory utilization'
                  x: '36'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 689F38
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Memory [system] utilization'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: STRING
                      name: ds.1.color
                      value: 0D47A1
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Memory [swap] utilization'
                    - type: INTEGER
                      name: legend_lines
                      value: '4'
                    - type: STRING
                      name: reference
                      value: MUDCJ
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Memory utilization Lina'
                  x: '36'
                  'y': '5'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: AC3C00
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Memory [lina] utilization'
                    - type: STRING
                      name: reference
                      value: FHFQK
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Memory utilization Snort'
                  x: '36'
                  'y': '10'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 9575CD
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Memory [snort] utilization'
                    - type: STRING
                      name: reference
                      value: HFJKY
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Space utilization chart'
                  x: '36'
                  'y': '15'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 43A047
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Disc space: Total'
                    - type: STRING
                      name: ds.1.color
                      value: 6D4C41
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Disc space: Used'
                    - type: STRING
                      name: reference
                      value: XKVPS
                    - type: INTEGER
                      name: righty
                      value: '0'
            - name: Interfaces
              widgets:
                - type: svggraph
                  name: 'Output packets'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 5E35B1
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Interface *: Output packets'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: INTEGER
                      name: legend_lines
                      value: '4'
                    - type: STRING
                      name: reference
                      value: FFCAF
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Output errors'
                  'y': '5'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: '795548'
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Interface *: Output errors'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: STRING
                      name: reference
                      value: FCDDA
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Incoming traffic'
                  'y': '10'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 78909C
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Interface *: Incoming traffic'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: STRING
                      name: reference
                      value: FEECA
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Input packets'
                  x: '36'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 0D47A1
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Interface *: Input packets'
                    - type: INTEGER
                      name: legend_lines
                      value: '4'
                    - type: STRING
                      name: reference
                      value: AEBCF
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Input errors'
                  x: '36'
                  'y': '5'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: AC3C00
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Interface *: Input errors'
                    - type: STRING
                      name: reference
                      value: ACDAE
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Outgoing traffic'
                  x: '36'
                  'y': '10'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 9575CD
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Interface *: Outgoing traffic'
                    - type: STRING
                      name: reference
                      value: AEBFA
                    - type: INTEGER
                      name: righty
                      value: '0'
            - name: 'Connections & NAT'
              widgets:
                - type: svggraph
                  name: 'Active Connections'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 43A047
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Statistic [connection][in_use]'
                    - type: INTEGER
                      name: ds.0.width
                      value: '2'
                    - type: STRING
                      name: ds.1.color
                      value: 1565C0
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Statistic [connection][most_used]'
                    - type: STRING
                      name: reference
                      value: TLDCU
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Connections Per Second'
                  'y': '5'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 0D47A1
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Statistic [cps][all]'
                    - type: STRING
                      name: ds.1.color
                      value: 00897B
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Statistic [cps][tcp]'
                    - type: STRING
                      name: ds.2.color
                      value: F9A825
                    - type: STRING
                      name: ds.2.items.0
                      value: 'Statistic [cps][udp]'
                    - type: STRING
                      name: reference
                      value: GNLNM
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'NAT Translations'
                  x: '36'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 546E7A
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Statistic [xlate][in_use]'
                    - type: STRING
                      name: ds.1.color
                      value: 5E35B1
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Statistic [xlate][most_used]'
                    - type: STRING
                      name: reference
                      value: BDOAF
                    - type: INTEGER
                      name: righty
                      value: '0'
                - type: svggraph
                  name: 'Preserve Connection'
                  x: '36'
                  'y': '5'
                  width: '36'
                  height: '5'
                  fields:
                    - type: STRING
                      name: ds.0.color
                      value: 0D47A1
                    - type: STRING
                      name: ds.0.items.0
                      value: 'Statistic [preserve_connection][enabled]'
                    - type: STRING
                      name: ds.1.color
                      value: 00897B
                    - type: STRING
                      name: ds.1.items.0
                      value: 'Statistic [preserve_connection][in_effect]'
                    - type: STRING
                      name: ds.2.color
                      value: F9A825
                    - type: STRING
                      name: ds.2.items.0
                      value: 'Statistic [preserve_connection][most_enabled]'
                    - type: STRING
                      name: ds.3.color
                      value: 8E24AA
                    - type: STRING
                      name: ds.3.items.0
                      value: 'Statistic [preserve_connection][most_in_effect]'
                    - type: STRING
                      name: reference
                      value: MMTRY
                    - type: INTEGER
                      name: righty
                      value: '0'
            - name: 'ASP Drop Reasons'
              widgets:
                - type: itemnavigator
                  width: '26'
                  height: '8'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'ASP [*]'
                    - type: STRING
                      name: reference
                      value: HPCOY
                - type: svggraph
                  x: '26'
                  width: '45'
                  height: '8'
                  fields:
                    - type: STRING
                      name: ds.0.color.0
                      value: 43A047
                    - type: INTEGER
                      name: ds.0.dataset_type
                      value: '0'
                    - type: STRING
                      name: ds.0.itemids.0._reference
                      value: HPCOY._itemid
                    - type: STRING
                      name: reference
                      value: OEAQY
                    - type: INTEGER
                      name: righty
                      value: '0'
            - name: 'Status Processes'
              widgets:
                - type: honeycomb
                  name: Status
                  width: '36'
                  height: '6'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Process [*]: Status'
                    - type: STRING
                      name: primary_label
                      value: '{ITEM.NAME}'
                    - type: STRING
                      name: reference
                      value: YWRAS
                    - type: INTEGER
                      name: secondary_label_decimal_places
                      value: '0'
                    - type: STRING
                      name: thresholds.0.color
                      value: FF465C
                    - type: STRING
                      name: thresholds.0.threshold
                      value: '0'
                    - type: STRING
                      name: thresholds.1.color
                      value: 0EC9AC
                    - type: STRING
                      name: thresholds.1.threshold
                      value: '1'
                    - type: STRING
                      name: thresholds.2.color
                      value: FFD54F
                    - type: STRING
                      name: thresholds.2.threshold
                      value: '3'
                - type: honeycomb
                  name: Uptime
                  'y': '6'
                  width: '72'
                  height: '6'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Process [*]: Uptime'
                    - type: STRING
                      name: primary_label
                      value: '{ITEM.NAME}'
                    - type: INTEGER
                      name: primary_label_bold
                      value: '1'
                    - type: STRING
                      name: reference
                      value: AGOOH
                - type: honeycomb
                  name: 'Restart count'
                  x: '36'
                  width: '36'
                  height: '6'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Process [*]: Restart count'
                    - type: STRING
                      name: primary_label
                      value: '{ITEM.NAME}'
                    - type: STRING
                      name: reference
                      value: XGHBR
                    - type: INTEGER
                      name: secondary_label_decimal_places
                      value: '0'
            - name: Sensors
              widgets:
                - type: itemnavigator
                  name: Temperature
                  width: '10'
                  height: '5'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Temperature [*]'
                    - type: STRING
                      name: reference
                      value: PSLAX
                - type: gauge
                  x: '10'
                  width: '14'
                  height: '5'
                  fields:
                    - type: INTEGER
                      name: angle
                      value: '270'
                    - type: STRING
                      name: description
                      value: '{ITEM.VALUE}'
                    - type: STRING
                      name: itemid._reference
                      value: PSLAX._itemid
                    - type: INTEGER
                      name: scale_size
                      value: '10'
                    - type: INTEGER
                      name: show.0
                      value: '1'
                    - type: INTEGER
                      name: show.1
                      value: '3'
                    - type: INTEGER
                      name: show.2
                      value: '4'
                    - type: INTEGER
                      name: show.3
                      value: '5'
                    - type: STRING
                      name: thresholds.0.color
                      value: CFD8DC
                    - type: STRING
                      name: thresholds.0.threshold
                      value: '0'
                    - type: STRING
                      name: thresholds.1.color
                      value: 42A5F5
                    - type: STRING
                      name: thresholds.1.threshold
                      value: '10'
                    - type: STRING
                      name: thresholds.2.color
                      value: 4CAF50
                    - type: STRING
                      name: thresholds.2.threshold
                      value: '20'
                    - type: STRING
                      name: thresholds.3.color
                      value: FDD835
                    - type: STRING
                      name: thresholds.3.threshold
                      value: '40'
                    - type: STRING
                      name: thresholds.4.color
                      value: EF6C00
                    - type: STRING
                      name: thresholds.4.threshold
                      value: '60'
                    - type: STRING
                      name: thresholds.5.color
                      value: F44336
                    - type: STRING
                      name: thresholds.5.threshold
                      value: '80'
                    - type: INTEGER
                      name: th_arc_size
                      value: '10'
                    - type: INTEGER
                      name: th_show_arc
                      value: '1'
                    - type: INTEGER
                      name: th_show_labels
                      value: '1'
                    - type: INTEGER
                      name: value_arc_size
                      value: '10'
                - type: itemnavigator
                  name: 'Power supply'
                  x: '24'
                  width: '10'
                  height: '5'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Power supply [*]'
                    - type: STRING
                      name: reference
                      value: ZSYHY
                - type: gauge
                  x: '34'
                  width: '14'
                  height: '5'
                  fields:
                    - type: INTEGER
                      name: angle
                      value: '270'
                    - type: STRING
                      name: description
                      value: '{ITEM.VALUE}'
                    - type: STRING
                      name: itemid._reference
                      value: ZSYHY._itemid
                    - type: STRING
                      name: max
                      value: '400'
                    - type: INTEGER
                      name: show.0
                      value: '1'
                    - type: INTEGER
                      name: show.1
                      value: '4'
                    - type: INTEGER
                      name: show.2
                      value: '5'
                    - type: STRING
                      name: value_arc_color
                      value: 00796B
                    - type: INTEGER
                      name: value_arc_size
                      value: '30'
                - type: itemnavigator
                  name: Fan
                  x: '48'
                  width: '11'
                  height: '5'
                  fields:
                    - type: STRING
                      name: items.0
                      value: 'Fan speed [*]'
                    - type: STRING
                      name: reference
                      value: YMRVB
                - type: gauge
                  x: '59'
                  width: '13'
                  height: '5'
                  fields:
                    - type: INTEGER
                      name: angle
                      value: '270'
                    - type: STRING
                      name: description
                      value: '{ITEM.VALUE}'
                    - type: STRING
                      name: itemid._reference
                      value: YMRVB._itemid
                    - type: STRING
                      name: max
                      value: '22000'
                    - type: INTEGER
                      name: show.0
                      value: '1'
                    - type: INTEGER
                      name: show.1
                      value: '3'
                    - type: INTEGER
                      name: show.2
                      value: '4'
                    - type: INTEGER
                      name: show.3
                      value: '5'
                    - type: STRING
                      name: value_arc_color
                      value: 1E88E5
                    - type: INTEGER
                      name: value_arc_size
                      value: '30'
      valuemaps:
        - uuid: b141de8aea904aef8eeb955fe7d09bd6
          name: 'Cisco FTD interface status'
          mappings:
            - value: '0'
              newvalue: Down
            - value: '1'
              newvalue: Up
        - uuid: 2a34dceeb32d44e39be2037a85b9dcb7
          name: 'Cisco FTD process status'
          mappings:
            - value: '1'
              newvalue: STOPPED
            - value: '2'
              newvalue: RUNNING
            - value: '3'
              newvalue: FAILED
            - value: '4'
              newvalue: UNKNOWN
            - value: '5'
              newvalue: RESTARTING
  graphs:
    - uuid: 63c998c8625c45ac8e29802bfa83f4e1
      name: 'Cisco Secure FTD: CPU Utilization'
      graph_items:
        - drawtype: GRADIENT_LINE
          color: 2196F3
          item:
            host: 'Cisco Secure Firewall Threat Defense by HTTP'
            key: cisco.ftd.cpu.utilization
